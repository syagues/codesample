{
  "version": 3,
  "sources": ["../node_modules/vscode-textmate/release/webpack:/vscodetextmate/webpack/universalModuleDefinition", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/debug.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/encodedTokenAttributes.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/grammar/basicScopesAttributeProvider.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/grammar/grammar.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/grammar/grammarDependencies.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/grammar/index.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/grammar/tokenizeString.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/json.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/main.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/matcher.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/onigLib.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/parseRawGrammar.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/plist.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/registry.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/rule.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/theme.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/out/utils.js", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/webpack/bootstrap", "../node_modules/vscode-textmate/release/webpack:/vscodetextmate/webpack/startup", "../node_modules/vscode-oniguruma/release/main.js", "../src/lineNumbers.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vscodetextmate\"] = factory();\n\telse\n\t\troot[\"vscodetextmate\"] = factory();\n})(this, function() {\nreturn ", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseOnigurumaFindOptions = exports.DebugFlags = void 0;\nexports.DebugFlags = {\n    InDebugMode: (typeof process !== 'undefined' && !!process.env['VSCODE_TEXTMATE_DEBUG'])\n};\nexports.UseOnigurumaFindOptions = false;\n//# sourceMappingURL=debug.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toOptionalTokenType = exports.EncodedTokenAttributes = void 0;\nvar EncodedTokenAttributes;\n(function (EncodedTokenAttributes) {\n    function toBinaryStr(encodedTokenAttributes) {\n        let r = encodedTokenAttributes.toString(2);\n        while (r.length < 32) {\n            r = \"0\" + r;\n        }\n        return r;\n    }\n    EncodedTokenAttributes.toBinaryStr = toBinaryStr;\n    function print(encodedTokenAttributes) {\n        const languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        const tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        const fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        const foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        const background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        console.log({\n            languageId: languageId,\n            tokenType: tokenType,\n            fontStyle: fontStyle,\n            foreground: foreground,\n            background: background,\n        });\n    }\n    EncodedTokenAttributes.print = print;\n    function getLanguageId(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 255 /* LANGUAGEID_MASK */) >>>\n            0 /* LANGUAGEID_OFFSET */);\n    }\n    EncodedTokenAttributes.getLanguageId = getLanguageId;\n    function getTokenType(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 768 /* TOKEN_TYPE_MASK */) >>>\n            8 /* TOKEN_TYPE_OFFSET */);\n    }\n    EncodedTokenAttributes.getTokenType = getTokenType;\n    function containsBalancedBrackets(encodedTokenAttributes) {\n        return (encodedTokenAttributes & 1024 /* BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    EncodedTokenAttributes.containsBalancedBrackets = containsBalancedBrackets;\n    function getFontStyle(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 30720 /* FONT_STYLE_MASK */) >>>\n            11 /* FONT_STYLE_OFFSET */);\n    }\n    EncodedTokenAttributes.getFontStyle = getFontStyle;\n    function getForeground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 16744448 /* FOREGROUND_MASK */) >>>\n            15 /* FOREGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getForeground = getForeground;\n    function getBackground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 4278190080 /* BACKGROUND_MASK */) >>>\n            24 /* BACKGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getBackground = getBackground;\n    /**\n     * Updates the fields in `metadata`.\n     * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n     */\n    function set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n        let _languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        let _tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        let _containsBalancedBracketsBit = EncodedTokenAttributes.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n        let _fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        let _foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        let _background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        if (languageId !== 0) {\n            _languageId = languageId;\n        }\n        if (tokenType !== 8 /* NotSet */) {\n            _tokenType = fromOptionalTokenType(tokenType);\n        }\n        if (containsBalancedBrackets !== null) {\n            _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n        }\n        if (fontStyle !== -1 /* NotSet */) {\n            _fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            _foreground = foreground;\n        }\n        if (background !== 0) {\n            _background = background;\n        }\n        return (((_languageId << 0 /* LANGUAGEID_OFFSET */) |\n            (_tokenType << 8 /* TOKEN_TYPE_OFFSET */) |\n            (_containsBalancedBracketsBit <<\n                10 /* BALANCED_BRACKETS_OFFSET */) |\n            (_fontStyle << 11 /* FONT_STYLE_OFFSET */) |\n            (_foreground << 15 /* FOREGROUND_OFFSET */) |\n            (_background << 24 /* BACKGROUND_OFFSET */)) >>>\n            0);\n    }\n    EncodedTokenAttributes.set = set;\n})(EncodedTokenAttributes = exports.EncodedTokenAttributes || (exports.EncodedTokenAttributes = {}));\nfunction toOptionalTokenType(standardType) {\n    return standardType;\n}\nexports.toOptionalTokenType = toOptionalTokenType;\nfunction fromOptionalTokenType(standardType) {\n    return standardType;\n}\n//# sourceMappingURL=encodedTokenAttributes.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasicScopeAttributesProvider = exports.BasicScopeAttributes = void 0;\nconst utils_1 = require(\"../utils\");\nclass BasicScopeAttributes {\n    constructor(languageId, tokenType) {\n        this.languageId = languageId;\n        this.tokenType = tokenType;\n    }\n}\nexports.BasicScopeAttributes = BasicScopeAttributes;\nclass BasicScopeAttributesProvider {\n    constructor(initialLanguageId, embeddedLanguages) {\n        this._getBasicScopeAttributes = new utils_1.CachedFn((scopeName) => {\n            const languageId = this._scopeToLanguage(scopeName);\n            const standardTokenType = this._toStandardTokenType(scopeName);\n            return new BasicScopeAttributes(languageId, standardTokenType);\n        });\n        this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* NotSet */);\n        this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n    }\n    getDefaultAttributes() {\n        return this._defaultAttributes;\n    }\n    getBasicScopeAttributes(scopeName) {\n        if (scopeName === null) {\n            return BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n        }\n        return this._getBasicScopeAttributes.get(scopeName);\n    }\n    /**\n     * Given a produced TM scope, return the language that token describes or null if unknown.\n     * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n     */\n    _scopeToLanguage(scope) {\n        return this._embeddedLanguagesMatcher.match(scope) || 0;\n    }\n    _toStandardTokenType(scopeName) {\n        const m = scopeName.match(BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n        if (!m) {\n            return 8 /* NotSet */;\n        }\n        switch (m[1]) {\n            case \"comment\":\n                return 1 /* Comment */;\n            case \"string\":\n                return 2 /* String */;\n            case \"regex\":\n                return 3 /* RegEx */;\n            case \"meta.embedded\":\n                return 0 /* Other */;\n        }\n        throw new Error(\"Unexpected match for standard token type!\");\n    }\n}\nexports.BasicScopeAttributesProvider = BasicScopeAttributesProvider;\nBasicScopeAttributesProvider._NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\nBasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\nclass ScopeMatcher {\n    constructor(values) {\n        if (values.length === 0) {\n            this.values = null;\n            this.scopesRegExp = null;\n        }\n        else {\n            this.values = new Map(values);\n            // create the regex\n            const escapedScopes = values.map(([scopeName, value]) => utils_1.escapeRegExpCharacters(scopeName));\n            escapedScopes.sort();\n            escapedScopes.reverse(); // Longest scope first\n            this.scopesRegExp = new RegExp(`^((${escapedScopes.join(\")|(\")}))($|\\\\.)`, \"\");\n        }\n    }\n    match(scope) {\n        if (!this.scopesRegExp) {\n            return undefined;\n        }\n        const m = scope.match(this.scopesRegExp);\n        if (!m) {\n            // no scopes matched\n            return undefined;\n        }\n        return this.values.get(m[1]);\n    }\n}\n//# sourceMappingURL=basicScopesAttributeProvider.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LineTokens = exports.BalancedBracketSelectors = exports.StateStack = exports.AttributedScopeStack = exports.Grammar = exports.createGrammar = void 0;\nconst debug_1 = require(\"../debug\");\nconst encodedTokenAttributes_1 = require(\"../encodedTokenAttributes\");\nconst matcher_1 = require(\"../matcher\");\nconst onigLib_1 = require(\"../onigLib\");\nconst rule_1 = require(\"../rule\");\nconst theme_1 = require(\"../theme\");\nconst utils_1 = require(\"../utils\");\nconst basicScopesAttributeProvider_1 = require(\"./basicScopesAttributeProvider\");\nconst tokenizeString_1 = require(\"./tokenizeString\");\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n    return new Grammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib); //TODO\n}\nexports.createGrammar = createGrammar;\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n    const matchers = matcher_1.createMatchers(selector, nameMatcher);\n    const ruleId = rule_1.RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n    for (const matcher of matchers) {\n        result.push({\n            debugSelector: selector,\n            matcher: matcher.matcher,\n            ruleId: ruleId,\n            grammar: grammar,\n            priority: matcher.priority\n        });\n    }\n}\nfunction nameMatcher(identifers, scopes) {\n    if (scopes.length < identifers.length) {\n        return false;\n    }\n    let lastIndex = 0;\n    return identifers.every(identifier => {\n        for (let i = lastIndex; i < scopes.length; i++) {\n            if (scopesAreMatching(scopes[i], identifier)) {\n                lastIndex = i + 1;\n                return true;\n            }\n        }\n        return false;\n    });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n    if (!thisScopeName) {\n        return false;\n    }\n    if (thisScopeName === scopeName) {\n        return true;\n    }\n    const len = scopeName.length;\n    return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\nclass Grammar {\n    constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n        this._rootScopeName = _rootScopeName;\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._onigLib = _onigLib;\n        this._basicScopeAttributesProvider = new basicScopesAttributeProvider_1.BasicScopeAttributesProvider(initialLanguage, embeddedLanguages);\n        this._rootId = -1;\n        this._lastRuleId = 0;\n        this._ruleId2desc = [null];\n        this._includedGrammars = {};\n        this._grammarRepository = grammarRepository;\n        this._grammar = initGrammar(grammar, null);\n        this._injections = null;\n        this._tokenTypeMatchers = [];\n        if (tokenTypes) {\n            for (const selector of Object.keys(tokenTypes)) {\n                const matchers = matcher_1.createMatchers(selector, nameMatcher);\n                for (const matcher of matchers) {\n                    this._tokenTypeMatchers.push({\n                        matcher: matcher.matcher,\n                        type: tokenTypes[selector],\n                    });\n                }\n            }\n        }\n    }\n    get themeProvider() { return this._grammarRepository; }\n    dispose() {\n        for (const rule of this._ruleId2desc) {\n            if (rule) {\n                rule.dispose();\n            }\n        }\n    }\n    createOnigScanner(sources) {\n        return this._onigLib.createOnigScanner(sources);\n    }\n    createOnigString(sources) {\n        return this._onigLib.createOnigString(sources);\n    }\n    getMetadataForScope(scope) {\n        return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n    }\n    _collectInjections() {\n        const grammarRepository = {\n            lookup: (scopeName) => {\n                if (scopeName === this._rootScopeName) {\n                    return this._grammar;\n                }\n                return this.getExternalGrammar(scopeName);\n            },\n            injections: (scopeName) => {\n                return this._grammarRepository.injections(scopeName);\n            },\n        };\n        const result = [];\n        const scopeName = this._rootScopeName;\n        const grammar = grammarRepository.lookup(scopeName);\n        if (grammar) {\n            // add injections from the current grammar\n            const rawInjections = grammar.injections;\n            if (rawInjections) {\n                for (let expression in rawInjections) {\n                    collectInjections(result, expression, rawInjections[expression], this, grammar);\n                }\n            }\n            // add injection grammars contributed for the current scope\n            const injectionScopeNames = this._grammarRepository.injections(scopeName);\n            if (injectionScopeNames) {\n                injectionScopeNames.forEach((injectionScopeName) => {\n                    const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n                    if (injectionGrammar) {\n                        const selector = injectionGrammar.injectionSelector;\n                        if (selector) {\n                            collectInjections(result, selector, injectionGrammar, this, injectionGrammar);\n                        }\n                    }\n                });\n            }\n        }\n        result.sort((i1, i2) => i1.priority - i2.priority); // sort by priority\n        return result;\n    }\n    getInjections() {\n        if (this._injections === null) {\n            this._injections = this._collectInjections();\n            if (debug_1.DebugFlags.InDebugMode && this._injections.length > 0) {\n                console.log(`Grammar ${this._rootScopeName} contains the following injections:`);\n                for (const injection of this._injections) {\n                    console.log(`  - ${injection.debugSelector}`);\n                }\n            }\n        }\n        return this._injections;\n    }\n    registerRule(factory) {\n        const id = ++this._lastRuleId;\n        const result = factory(rule_1.ruleIdFromNumber(id));\n        this._ruleId2desc[id] = result;\n        return result;\n    }\n    getRule(ruleId) {\n        return this._ruleId2desc[rule_1.ruleIdToNumber(ruleId)];\n    }\n    getExternalGrammar(scopeName, repository) {\n        if (this._includedGrammars[scopeName]) {\n            return this._includedGrammars[scopeName];\n        }\n        else if (this._grammarRepository) {\n            const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n            if (rawIncludedGrammar) {\n                // console.log('LOADED GRAMMAR ' + pattern.include);\n                this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\n                return this._includedGrammars[scopeName];\n            }\n        }\n        return undefined;\n    }\n    tokenizeLine(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, false, timeLimit);\n        return {\n            tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    tokenizeLine2(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, true, timeLimit);\n        return {\n            tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n        if (this._rootId === -1) {\n            this._rootId = rule_1.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\n        }\n        let isFirstLine;\n        if (!prevState || prevState === StateStack.NULL) {\n            isFirstLine = true;\n            const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n            const defaultStyle = this.themeProvider.getDefaults();\n            const defaultMetadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, null, defaultStyle.fontStyle, defaultStyle.foregroundId, defaultStyle.backgroundId);\n            const rootScopeName = this.getRule(this._rootId).getName(null, null);\n            let scopeList;\n            if (rootScopeName) {\n                scopeList = AttributedScopeStack.createRootAndLookUpScopeName(rootScopeName, defaultMetadata, this);\n            }\n            else {\n                scopeList = AttributedScopeStack.createRoot(\"unknown\", defaultMetadata);\n            }\n            prevState = new StateStack(null, this._rootId, -1, -1, false, null, scopeList, scopeList);\n        }\n        else {\n            isFirstLine = false;\n            prevState.reset();\n        }\n        lineText = lineText + \"\\n\";\n        const onigLineText = this.createOnigString(lineText);\n        const lineLength = onigLineText.content.length;\n        const lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers, this.balancedBracketSelectors);\n        const r = tokenizeString_1._tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens, true, timeLimit);\n        onigLib_1.disposeOnigString(onigLineText);\n        return {\n            lineLength: lineLength,\n            lineTokens: lineTokens,\n            ruleStack: r.stack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n}\nexports.Grammar = Grammar;\nfunction initGrammar(grammar, base) {\n    grammar = utils_1.clone(grammar);\n    grammar.repository = grammar.repository || {};\n    grammar.repository.$self = {\n        $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n        patterns: grammar.patterns,\n        name: grammar.scopeName\n    };\n    grammar.repository.$base = base || grammar.repository.$self;\n    return grammar;\n}\nclass AttributedScopeStack {\n    constructor(parent, scopePath, tokenAttributes) {\n        this.parent = parent;\n        this.scopePath = scopePath;\n        this.tokenAttributes = tokenAttributes;\n    }\n    static createRoot(scopeName, tokenAttributes) {\n        return new AttributedScopeStack(null, new theme_1.ScopeStack(null, scopeName), tokenAttributes);\n    }\n    static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n        const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n        const scopePath = new theme_1.ScopeStack(null, scopeName);\n        const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n        const resolvedTokenAttributes = AttributedScopeStack.mergeAttributes(tokenAttributes, rawRootMetadata, rootStyle);\n        return new AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n    }\n    get scopeName() { return this.scopePath.scopeName; }\n    equals(other) {\n        return AttributedScopeStack._equals(this, other);\n    }\n    static _equals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n        let fontStyle = -1 /* NotSet */;\n        let foreground = 0;\n        let background = 0;\n        if (styleAttributes !== null) {\n            fontStyle = styleAttributes.fontStyle;\n            foreground = styleAttributes.foregroundId;\n            background = styleAttributes.backgroundId;\n        }\n        return encodedTokenAttributes_1.EncodedTokenAttributes.set(existingTokenAttributes, basicScopeAttributes.languageId, basicScopeAttributes.tokenType, null, fontStyle, foreground, background);\n    }\n    pushAttributed(scopePath, grammar) {\n        if (scopePath === null) {\n            return this;\n        }\n        if (scopePath.indexOf(' ') === -1) {\n            // This is the common case and much faster\n            return AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n        }\n        const scopes = scopePath.split(/ /g);\n        let result = this;\n        for (const scope of scopes) {\n            result = AttributedScopeStack._pushAttributed(result, scope, grammar);\n        }\n        return result;\n    }\n    static _pushAttributed(target, scopeName, grammar) {\n        const rawMetadata = grammar.getMetadataForScope(scopeName);\n        const newPath = target.scopePath.push(scopeName);\n        const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n        const metadata = AttributedScopeStack.mergeAttributes(target.tokenAttributes, rawMetadata, scopeThemeMatchResult);\n        return new AttributedScopeStack(target, newPath, metadata);\n    }\n    getScopeNames() {\n        return this.scopePath.getSegments();\n    }\n}\nexports.AttributedScopeStack = AttributedScopeStack;\n/**\n * Represents a \"pushed\" state on the stack (as a linked list element).\n */\nclass StateStack {\n    constructor(\n    /**\n     * The previous state on the stack (or null for the root state).\n     */\n    parent, \n    /**\n     * The state (rule) that this element represents.\n     */\n    ruleId, enterPos, anchorPos, \n    /**\n     * The state has entered and captured \\n. This means that the next line should have an anchorPosition of 0.\n     */\n    beginRuleCapturedEOL, \n    /**\n     * The \"pop\" (end) condition for this state in case that it was dynamically generated through captured text.\n     */\n    endRule, \n    /**\n     * The list of scopes containing the \"name\" for this state.\n     */\n    nameScopesList, \n    /**\n     * The list of scopes containing the \"contentName\" (besides \"name\") for this state.\n     * This list **must** contain as an element `scopeName`.\n     */\n    contentNameScopesList) {\n        this.parent = parent;\n        this.ruleId = ruleId;\n        this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n        this.endRule = endRule;\n        this.nameScopesList = nameScopesList;\n        this.contentNameScopesList = contentNameScopesList;\n        this._stackElementBrand = undefined;\n        this.depth = this.parent ? this.parent.depth + 1 : 1;\n        this._enterPos = enterPos;\n        this._anchorPos = anchorPos;\n    }\n    equals(other) {\n        if (other === null) {\n            return false;\n        }\n        return StateStack._equals(this, other);\n    }\n    static _equals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!this._structuralEquals(a, b)) {\n            return false;\n        }\n        return a.contentNameScopesList.equals(b.contentNameScopesList);\n    }\n    /**\n     * A structural equals check. Does not take into account `scopes`.\n     */\n    static _structuralEquals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.depth !== b.depth ||\n                a.ruleId !== b.ruleId ||\n                a.endRule !== b.endRule) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    clone() {\n        return this;\n    }\n    static _reset(el) {\n        while (el) {\n            el._enterPos = -1;\n            el._anchorPos = -1;\n            el = el.parent;\n        }\n    }\n    reset() {\n        StateStack._reset(this);\n    }\n    pop() {\n        return this.parent;\n    }\n    safePop() {\n        if (this.parent) {\n            return this.parent;\n        }\n        return this;\n    }\n    push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n        return new StateStack(this, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList);\n    }\n    getEnterPos() {\n        return this._enterPos;\n    }\n    getAnchorPos() {\n        return this._anchorPos;\n    }\n    getRule(grammar) {\n        return grammar.getRule(this.ruleId);\n    }\n    toString() {\n        const r = [];\n        this._writeString(r, 0);\n        return \"[\" + r.join(\",\") + \"]\";\n    }\n    _writeString(res, outIndex) {\n        if (this.parent) {\n            outIndex = this.parent._writeString(res, outIndex);\n        }\n        res[outIndex++] = `(${this.ruleId}, TODO-${this.nameScopesList}, TODO-${this.contentNameScopesList})`;\n        return outIndex;\n    }\n    withContentNameScopesList(contentNameScopeStack) {\n        if (this.contentNameScopesList === contentNameScopeStack) {\n            return this;\n        }\n        return this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, contentNameScopeStack);\n    }\n    withEndRule(endRule) {\n        if (this.endRule === endRule) {\n            return this;\n        }\n        return new StateStack(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, endRule, this.nameScopesList, this.contentNameScopesList);\n    }\n    // Used to warn of endless loops\n    hasSameRuleAs(other) {\n        let el = this;\n        while (el && el._enterPos === other._enterPos) {\n            if (el.ruleId === other.ruleId) {\n                return true;\n            }\n            el = el.parent;\n        }\n        return false;\n    }\n}\nexports.StateStack = StateStack;\n// TODO remove me\nStateStack.NULL = new StateStack(null, 0, 0, 0, false, null, null, null);\nclass BalancedBracketSelectors {\n    constructor(balancedBracketScopes, unbalancedBracketScopes) {\n        this.allowAny = false;\n        this.balancedBracketScopes = balancedBracketScopes.flatMap((selector) => {\n            if (selector === '*') {\n                this.allowAny = true;\n                return [];\n            }\n            return matcher_1.createMatchers(selector, nameMatcher).map((m) => m.matcher);\n        });\n        this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap((selector) => matcher_1.createMatchers(selector, nameMatcher).map((m) => m.matcher));\n    }\n    get matchesAlways() {\n        return this.allowAny && this.unbalancedBracketScopes.length === 0;\n    }\n    get matchesNever() {\n        return this.balancedBracketScopes.length === 0 && !this.allowAny;\n    }\n    match(scopes) {\n        for (const excluder of this.unbalancedBracketScopes) {\n            if (excluder(scopes)) {\n                return false;\n            }\n        }\n        for (const includer of this.balancedBracketScopes) {\n            if (includer(scopes)) {\n                return true;\n            }\n        }\n        return this.allowAny;\n    }\n}\nexports.BalancedBracketSelectors = BalancedBracketSelectors;\nclass LineTokens {\n    constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._emitBinaryTokens = emitBinaryTokens;\n        this._tokenTypeOverrides = tokenTypeOverrides;\n        if (debug_1.DebugFlags.InDebugMode) {\n            this._lineText = lineText;\n        }\n        else {\n            this._lineText = null;\n        }\n        this._tokens = [];\n        this._binaryTokens = [];\n        this._lastTokenEndIndex = 0;\n    }\n    produce(stack, endIndex) {\n        this.produceFromScopes(stack.contentNameScopesList, endIndex);\n    }\n    produceFromScopes(scopesList, endIndex) {\n        if (this._lastTokenEndIndex >= endIndex) {\n            return;\n        }\n        if (this._emitBinaryTokens) {\n            let metadata = scopesList.tokenAttributes;\n            let containsBalancedBrackets = false;\n            if (this.balancedBracketSelectors?.matchesAlways) {\n                containsBalancedBrackets = true;\n            }\n            if (this._tokenTypeOverrides.length > 0 || (this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever)) {\n                // Only generate scope array when required to improve performance\n                const scopes = scopesList.getScopeNames();\n                for (const tokenType of this._tokenTypeOverrides) {\n                    if (tokenType.matcher(scopes)) {\n                        metadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(metadata, 0, encodedTokenAttributes_1.toOptionalTokenType(tokenType.type), null, -1 /* NotSet */, 0, 0);\n                    }\n                }\n                if (this.balancedBracketSelectors) {\n                    containsBalancedBrackets = this.balancedBracketSelectors.match(scopes);\n                }\n            }\n            if (containsBalancedBrackets) {\n                metadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(metadata, 0, 8 /* NotSet */, containsBalancedBrackets, -1 /* NotSet */, 0, 0);\n            }\n            if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n                // no need to push a token with the same metadata\n                this._lastTokenEndIndex = endIndex;\n                return;\n            }\n            if (debug_1.DebugFlags.InDebugMode) {\n                const scopes = scopesList.getScopeNames();\n                console.log('  token: |' + this._lineText.substring(this._lastTokenEndIndex, endIndex).replace(/\\n$/, '\\\\n') + '|');\n                for (let k = 0; k < scopes.length; k++) {\n                    console.log('      * ' + scopes[k]);\n                }\n            }\n            this._binaryTokens.push(this._lastTokenEndIndex);\n            this._binaryTokens.push(metadata);\n            this._lastTokenEndIndex = endIndex;\n            return;\n        }\n        const scopes = scopesList.getScopeNames();\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log('  token: |' + this._lineText.substring(this._lastTokenEndIndex, endIndex).replace(/\\n$/, '\\\\n') + '|');\n            for (let k = 0; k < scopes.length; k++) {\n                console.log('      * ' + scopes[k]);\n            }\n        }\n        this._tokens.push({\n            startIndex: this._lastTokenEndIndex,\n            endIndex: endIndex,\n            // value: lineText.substring(lastTokenEndIndex, endIndex),\n            scopes: scopes\n        });\n        this._lastTokenEndIndex = endIndex;\n    }\n    getResult(stack, lineLength) {\n        if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n            // pop produced token for newline\n            this._tokens.pop();\n        }\n        if (this._tokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._tokens[this._tokens.length - 1].startIndex = 0;\n        }\n        return this._tokens;\n    }\n    getBinaryResult(stack, lineLength) {\n        if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n            // pop produced token for newline\n            this._binaryTokens.pop();\n            this._binaryTokens.pop();\n        }\n        if (this._binaryTokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._binaryTokens[this._binaryTokens.length - 2] = 0;\n        }\n        const result = new Uint32Array(this._binaryTokens.length);\n        for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n            result[i] = this._binaryTokens[i];\n        }\n        return result;\n    }\n}\nexports.LineTokens = LineTokens;\n//# sourceMappingURL=grammar.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseInclude = exports.TopLevelRepositoryReference = exports.TopLevelReference = exports.RelativeReference = exports.SelfReference = exports.BaseReference = exports.ScopeDependencyProcessor = exports.ExternalReferenceCollector = exports.TopLevelRepositoryRuleReference = exports.TopLevelRuleReference = void 0;\nconst utils_1 = require(\"../utils\");\n/**\n * References the top level rule of a grammar with the given scope name.\n*/\nclass TopLevelRuleReference {\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n    toKey() {\n        return this.scopeName;\n    }\n}\nexports.TopLevelRuleReference = TopLevelRuleReference;\n/**\n * References a rule of a grammar in the top level repository section with the given name.\n*/\nclass TopLevelRepositoryRuleReference {\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n    toKey() {\n        return `${this.scopeName}#${this.ruleName}`;\n    }\n}\nexports.TopLevelRepositoryRuleReference = TopLevelRepositoryRuleReference;\nclass ExternalReferenceCollector {\n    constructor() {\n        this._references = [];\n        this._seenReferenceKeys = new Set();\n        this.visitedRule = new Set();\n    }\n    get references() {\n        return this._references;\n    }\n    add(reference) {\n        const key = reference.toKey();\n        if (this._seenReferenceKeys.has(key)) {\n            return;\n        }\n        this._seenReferenceKeys.add(key);\n        this._references.push(reference);\n    }\n}\nexports.ExternalReferenceCollector = ExternalReferenceCollector;\nclass ScopeDependencyProcessor {\n    constructor(repo, initialScopeName) {\n        this.repo = repo;\n        this.initialScopeName = initialScopeName;\n        this.seenFullScopeRequests = new Set();\n        this.seenPartialScopeRequests = new Set();\n        this.seenFullScopeRequests.add(this.initialScopeName);\n        this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n    }\n    processQueue() {\n        const q = this.Q;\n        this.Q = [];\n        const deps = new ExternalReferenceCollector();\n        for (const dep of q) {\n            collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n        }\n        for (const dep of deps.references) {\n            if (dep instanceof TopLevelRuleReference) {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed\n                    continue;\n                }\n                this.seenFullScopeRequests.add(dep.scopeName);\n                this.Q.push(dep);\n            }\n            else {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed in full\n                    continue;\n                }\n                if (this.seenPartialScopeRequests.has(dep.toKey())) {\n                    // already processed\n                    continue;\n                }\n                this.seenPartialScopeRequests.add(dep.toKey());\n                this.Q.push(dep);\n            }\n        }\n    }\n}\nexports.ScopeDependencyProcessor = ScopeDependencyProcessor;\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n    const selfGrammar = repo.lookup(reference.scopeName);\n    if (!selfGrammar) {\n        if (reference.scopeName === baseGrammarScopeName) {\n            throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n        }\n        return;\n    }\n    const baseGrammar = repo.lookup(baseGrammarScopeName);\n    if (reference instanceof TopLevelRuleReference) {\n        collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n    }\n    else {\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { baseGrammar, selfGrammar, repository: selfGrammar.repository }, result);\n    }\n    const injections = repo.injections(reference.scopeName);\n    if (injections) {\n        for (const injection of injections) {\n            result.add(new TopLevelRuleReference(injection));\n        }\n    }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n    if (context.repository && context.repository[ruleName]) {\n        const rule = context.repository[ruleName];\n        collectExternalReferencesInRules([rule], context, result);\n    }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n    if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n        collectExternalReferencesInRules(context.selfGrammar.patterns, { ...context, repository: context.selfGrammar.repository }, result);\n    }\n    if (context.selfGrammar.injections) {\n        collectExternalReferencesInRules(Object.values(context.selfGrammar.injections), { ...context, repository: context.selfGrammar.repository }, result);\n    }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n    for (const rule of rules) {\n        if (result.visitedRule.has(rule)) {\n            continue;\n        }\n        result.visitedRule.add(rule);\n        const patternRepository = rule.repository ? utils_1.mergeObjects({}, context.repository, rule.repository) : context.repository;\n        if (Array.isArray(rule.patterns)) {\n            collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n        }\n        const include = rule.include;\n        if (!include) {\n            continue;\n        }\n        const reference = parseInclude(include);\n        switch (reference.kind) {\n            case 0 /* Base */:\n                collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n                break;\n            case 1 /* Self */:\n                collectExternalReferencesInTopLevelRule(context, result);\n                break;\n            case 2 /* RelativeReference */:\n                collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n                break;\n            case 3 /* TopLevelReference */:\n            case 4 /* TopLevelRepositoryReference */:\n                const selfGrammar = reference.scopeName === context.selfGrammar.scopeName\n                    ? context.selfGrammar\n                    : reference.scopeName === context.baseGrammar.scopeName\n                        ? context.baseGrammar\n                        : undefined;\n                if (selfGrammar) {\n                    const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n                    if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n                        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n                    }\n                    else {\n                        collectExternalReferencesInTopLevelRule(newContext, result);\n                    }\n                }\n                else {\n                    if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n                        result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n                    }\n                    else {\n                        result.add(new TopLevelRuleReference(reference.scopeName));\n                    }\n                }\n                break;\n        }\n    }\n}\nclass BaseReference {\n    constructor() {\n        this.kind = 0 /* Base */;\n    }\n}\nexports.BaseReference = BaseReference;\nclass SelfReference {\n    constructor() {\n        this.kind = 1 /* Self */;\n    }\n}\nexports.SelfReference = SelfReference;\nclass RelativeReference {\n    constructor(ruleName) {\n        this.ruleName = ruleName;\n        this.kind = 2 /* RelativeReference */;\n    }\n}\nexports.RelativeReference = RelativeReference;\nclass TopLevelReference {\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n        this.kind = 3 /* TopLevelReference */;\n    }\n}\nexports.TopLevelReference = TopLevelReference;\nclass TopLevelRepositoryReference {\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n        this.kind = 4 /* TopLevelRepositoryReference */;\n    }\n}\nexports.TopLevelRepositoryReference = TopLevelRepositoryReference;\nfunction parseInclude(include) {\n    if (include === '$base') {\n        return new BaseReference();\n    }\n    else if (include === '$self') {\n        return new SelfReference();\n    }\n    const indexOfSharp = include.indexOf(\"#\");\n    if (indexOfSharp === -1) {\n        return new TopLevelReference(include);\n    }\n    else if (indexOfSharp === 0) {\n        return new RelativeReference(include.substring(1));\n    }\n    else {\n        const scopeName = include.substring(0, indexOfSharp);\n        const ruleName = include.substring(indexOfSharp + 1);\n        return new TopLevelRepositoryReference(scopeName, ruleName);\n    }\n}\nexports.parseInclude = parseInclude;\n//# sourceMappingURL=grammarDependencies.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./grammar\"), exports);\n//# sourceMappingURL=index.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalStackElement = exports._tokenizeString = void 0;\nconst debug_1 = require(\"../debug\");\nconst onigLib_1 = require(\"../onigLib\");\nconst rule_1 = require(\"../rule\");\nconst utils_1 = require(\"../utils\");\nclass TokenizeStringResult {\n    constructor(stack, stoppedEarly) {\n        this.stack = stack;\n        this.stoppedEarly = stoppedEarly;\n    }\n}\n/**\n * Tokenize a string\n * @param grammar\n * @param lineText\n * @param isFirstLine\n * @param linePos\n * @param stack\n * @param lineTokens\n * @param checkWhileConditions\n * @param timeLimit Use `0` to indicate no time limit\n * @returns the StackElement or StackElement.TIME_LIMIT_REACHED if the time limit has been reached\n */\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n    const lineLength = lineText.content.length;\n    let STOP = false;\n    let anchorPosition = -1;\n    if (checkWhileConditions) {\n        const whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\n        stack = whileCheckResult.stack;\n        linePos = whileCheckResult.linePos;\n        isFirstLine = whileCheckResult.isFirstLine;\n        anchorPosition = whileCheckResult.anchorPosition;\n    }\n    const startTime = Date.now();\n    while (!STOP) {\n        if (timeLimit !== 0) {\n            const elapsedTime = Date.now() - startTime;\n            if (elapsedTime > timeLimit) {\n                return new TokenizeStringResult(stack, true);\n            }\n        }\n        scanNext(); // potentially modifies linePos && anchorPosition\n    }\n    return new TokenizeStringResult(stack, false);\n    function scanNext() {\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log(\"\");\n            console.log(`@@scanNext ${linePos}: |${lineText.content\n                .substr(linePos)\n                .replace(/\\n$/, \"\\\\n\")}|`);\n        }\n        const r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n        if (!r) {\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log(\"  no more matches.\");\n            }\n            // No match\n            lineTokens.produce(stack, lineLength);\n            STOP = true;\n            return;\n        }\n        const captureIndices = r.captureIndices;\n        const matchedRuleId = r.matchedRuleId;\n        const hasAdvanced = captureIndices && captureIndices.length > 0\n            ? captureIndices[0].end > linePos\n            : false;\n        if (matchedRuleId === rule_1.endRuleId) {\n            // We matched the `end` for this rule => pop it\n            const poppedRule = stack.getRule(grammar);\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log(\"  popping \" +\n                    poppedRule.debugName +\n                    \" - \" +\n                    poppedRule.debugEndRegExp);\n            }\n            lineTokens.produce(stack, captureIndices[0].start);\n            stack = stack.withContentNameScopesList(stack.nameScopesList);\n            handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\n            lineTokens.produce(stack, captureIndices[0].end);\n            // pop\n            const popped = stack;\n            stack = stack.parent;\n            anchorPosition = popped.getAnchorPos();\n            if (!hasAdvanced && popped.getEnterPos() === linePos) {\n                // Grammar pushed & popped a rule without advancing\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.error(\"[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing\");\n                }\n                // See https://github.com/Microsoft/vscode-textmate/issues/12\n                // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\n                stack = popped;\n                lineTokens.produce(stack, lineLength);\n                STOP = true;\n                return;\n            }\n        }\n        else {\n            // We matched a rule!\n            const _rule = grammar.getRule(matchedRuleId);\n            lineTokens.produce(stack, captureIndices[0].start);\n            const beforePush = stack;\n            // push it on the stack rule\n            const scopeName = _rule.getName(lineText.content, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            stack = stack.push(matchedRuleId, linePos, anchorPosition, captureIndices[0].end === lineLength, null, nameScopesList, nameScopesList);\n            if (_rule instanceof rule_1.BeginEndRule) {\n                const pushedRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  pushing \" +\n                        pushedRule.debugName +\n                        \" - \" +\n                        pushedRule.debugBeginRegExp);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.endHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getEndWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    // Grammar pushed the same rule without advancing\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\");\n                    }\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else if (_rule instanceof rule_1.BeginWhileRule) {\n                const pushedRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  pushing \" + pushedRule.debugName);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.whileHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getWhileWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    // Grammar pushed the same rule without advancing\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\");\n                    }\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else {\n                const matchingRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  matched \" +\n                        matchingRule.debugName +\n                        \" - \" +\n                        matchingRule.debugMatchRegExp);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                // pop rule immediately since it is a MatchRule\n                stack = stack.pop();\n                if (!hasAdvanced) {\n                    // Grammar is not advancing, nor is it pushing/popping\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping\");\n                    }\n                    stack = stack.safePop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n        }\n        if (captureIndices[0].end > linePos) {\n            // Advance stream\n            linePos = captureIndices[0].end;\n            isFirstLine = false;\n        }\n    }\n}\nexports._tokenizeString = _tokenizeString;\n/**\n * Walk the stack from bottom to top, and check each while condition in this order.\n * If any fails, cut off the entire stack above the failed while condition. While conditions\n * may also advance the linePosition.\n */\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n    let anchorPosition = (stack.beginRuleCapturedEOL ? 0 : -1);\n    const whileRules = [];\n    for (let node = stack; node; node = node.pop()) {\n        const nodeRule = node.getRule(grammar);\n        if (nodeRule instanceof rule_1.BeginWhileRule) {\n            whileRules.push({\n                rule: nodeRule,\n                stack: node\n            });\n        }\n    }\n    for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n        const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n        const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log('  scanning for while rule');\n            console.log(ruleScanner.toString());\n        }\n        if (r) {\n            const matchedRuleId = r.ruleId;\n            if (matchedRuleId !== rule_1.whileRuleId) {\n                // we shouldn't end up here\n                stack = whileRule.stack.pop();\n                break;\n            }\n            if (r.captureIndices && r.captureIndices.length) {\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n                handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n                anchorPosition = r.captureIndices[0].end;\n                if (r.captureIndices[0].end > linePos) {\n                    linePos = r.captureIndices[0].end;\n                    isFirstLine = false;\n                }\n            }\n        }\n        else {\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log('  popping ' + whileRule.rule.debugName + ' - ' + whileRule.rule.debugWhileRegExp);\n            }\n            stack = whileRule.stack.pop();\n            break;\n        }\n    }\n    return { stack: stack, linePos: linePos, anchorPosition: anchorPosition, isFirstLine: isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // Look for normal grammar rule\n    const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    // Look for injected rules\n    const injections = grammar.getInjections();\n    if (injections.length === 0) {\n        // No injections whatsoever => early return\n        return matchResult;\n    }\n    const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    if (!injectionResult) {\n        // No injections matched => early return\n        return matchResult;\n    }\n    if (!matchResult) {\n        // Only injections matched => early return\n        return injectionResult;\n    }\n    // Decide if `matchResult` or `injectionResult` should win\n    const matchResultScore = matchResult.captureIndices[0].start;\n    const injectionResultScore = injectionResult.captureIndices[0].start;\n    if (injectionResultScore < matchResultScore || (injectionResult.priorityMatch && injectionResultScore === matchResultScore)) {\n        // injection won!\n        return injectionResult;\n    }\n    return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    const rule = stack.getRule(grammar);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n    let perfStart = 0;\n    if (debug_1.DebugFlags.InDebugMode) {\n        perfStart = utils_1.performanceNow();\n    }\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (debug_1.DebugFlags.InDebugMode) {\n        const elapsedMillis = utils_1.performanceNow() - perfStart;\n        if (elapsedMillis > 5) {\n            console.warn(`Rule ${rule.debugName} (${rule.id}) matching took ${elapsedMillis} against '${lineText}'`);\n        }\n        console.log(`  scanning for (linePos: ${linePos}, anchorPosition: ${anchorPosition})`);\n        console.log(ruleScanner.toString());\n        if (r) {\n            console.log(`matched rule id: ${r.ruleId} from ${r.captureIndices[0].start} to ${r.captureIndices[0].end}`);\n        }\n    }\n    if (r) {\n        return {\n            captureIndices: r.captureIndices,\n            matchedRuleId: r.ruleId\n        };\n    }\n    return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // The lower the better\n    let bestMatchRating = Number.MAX_VALUE;\n    let bestMatchCaptureIndices = null;\n    let bestMatchRuleId;\n    let bestMatchResultPriority = 0;\n    const scopes = stack.contentNameScopesList.getScopeNames();\n    for (let i = 0, len = injections.length; i < len; i++) {\n        const injection = injections[i];\n        if (!injection.matcher(scopes)) {\n            // injection selector doesn't match stack\n            continue;\n        }\n        const rule = grammar.getRule(injection.ruleId);\n        const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n        const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (!matchResult) {\n            continue;\n        }\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log(`  matched injection: ${injection.debugSelector}`);\n            console.log(ruleScanner.toString());\n        }\n        const matchRating = matchResult.captureIndices[0].start;\n        if (matchRating >= bestMatchRating) {\n            // Injections are sorted by priority, so the previous injection had a better or equal priority\n            continue;\n        }\n        bestMatchRating = matchRating;\n        bestMatchCaptureIndices = matchResult.captureIndices;\n        bestMatchRuleId = matchResult.ruleId;\n        bestMatchResultPriority = injection.priority;\n        if (bestMatchRating === linePos) {\n            // No more need to look at the rest of the injections.\n            break;\n        }\n    }\n    if (bestMatchCaptureIndices) {\n        return {\n            priorityMatch: bestMatchResultPriority === -1,\n            captureIndices: bestMatchCaptureIndices,\n            matchedRuleId: bestMatchRuleId\n        };\n    }\n    return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    if (debug_1.UseOnigurumaFindOptions) {\n        const ruleScanner = rule.compile(grammar, endRegexSource);\n        const findOptions = getFindOptions(allowA, allowG);\n        return { ruleScanner, findOptions };\n    }\n    const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    if (debug_1.UseOnigurumaFindOptions) {\n        const ruleScanner = rule.compileWhile(grammar, endRegexSource);\n        const findOptions = getFindOptions(allowA, allowG);\n        return { ruleScanner, findOptions };\n    }\n    const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction getFindOptions(allowA, allowG) {\n    let options = 0 /* None */;\n    if (!allowA) {\n        options |= 1 /* NotBeginString */;\n    }\n    if (!allowG) {\n        options |= 4 /* NotBeginPosition */;\n    }\n    return options;\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n    if (captures.length === 0) {\n        return;\n    }\n    const lineTextContent = lineText.content;\n    const len = Math.min(captures.length, captureIndices.length);\n    const localStack = [];\n    const maxEnd = captureIndices[0].end;\n    for (let i = 0; i < len; i++) {\n        const captureRule = captures[i];\n        if (captureRule === null) {\n            // Not interested\n            continue;\n        }\n        const captureIndex = captureIndices[i];\n        if (captureIndex.length === 0) {\n            // Nothing really captured\n            continue;\n        }\n        if (captureIndex.start > maxEnd) {\n            // Capture going beyond consumed string\n            break;\n        }\n        // pop captures while needed\n        while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n            // pop!\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n            localStack.pop();\n        }\n        if (localStack.length > 0) {\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n        }\n        else {\n            lineTokens.produce(stack, captureIndex.start);\n        }\n        if (captureRule.retokenizeCapturedWithRuleId) {\n            // the capture requires additional matching\n            const scopeName = captureRule.getName(lineTextContent, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n            const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n            const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n            const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n            _tokenizeString(grammar, onigSubStr, (isFirstLine && captureIndex.start === 0), captureIndex.start, stackClone, lineTokens, false, /* no time limit */ 0);\n            onigLib_1.disposeOnigString(onigSubStr);\n            continue;\n        }\n        const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n        if (captureRuleScopeName !== null) {\n            // push\n            const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n            const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n            localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n        }\n    }\n    while (localStack.length > 0) {\n        // pop!\n        lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n        localStack.pop();\n    }\n}\nclass LocalStackElement {\n    constructor(scopes, endPos) {\n        this.scopes = scopes;\n        this.endPos = endPos;\n    }\n}\nexports.LocalStackElement = LocalStackElement;\n//# sourceMappingURL=tokenizeString.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseJSON = void 0;\nfunction doFail(streamState, msg) {\n    // console.log('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\n    throw new Error('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\n}\nfunction parseJSON(source, filename, withMetadata) {\n    let streamState = new JSONStreamState(source);\n    let token = new JSONToken();\n    let state = 0 /* ROOT_STATE */;\n    let cur = null;\n    let stateStack = [];\n    let objStack = [];\n    function pushState() {\n        stateStack.push(state);\n        objStack.push(cur);\n    }\n    function popState() {\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        doFail(streamState, msg);\n    }\n    while (nextJSONToken(streamState, token)) {\n        if (state === 0 /* ROOT_STATE */) {\n            if (cur !== null) {\n                fail('too many constructs in root');\n            }\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                cur = {};\n                if (withMetadata) {\n                    cur.$vscodeTextmateLocation = token.toLocation(filename);\n                }\n                pushState();\n                state = 1 /* DICT_STATE */;\n                continue;\n            }\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                cur = [];\n                pushState();\n                state = 4 /* ARR_STATE */;\n                continue;\n            }\n            fail('unexpected token in root');\n        }\n        if (state === 2 /* DICT_STATE_COMMA */) {\n            if (token.type === 5 /* RIGHT_CURLY_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 7 /* COMMA */) {\n                state = 3 /* DICT_STATE_NO_CLOSE */;\n                continue;\n            }\n            fail('expected , or }');\n        }\n        if (state === 1 /* DICT_STATE */ || state === 3 /* DICT_STATE_NO_CLOSE */) {\n            if (state === 1 /* DICT_STATE */ && token.type === 5 /* RIGHT_CURLY_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 1 /* STRING */) {\n                let keyValue = token.value;\n                if (!nextJSONToken(streamState, token) || token.type !== 6 /* COLON */) {\n                    fail('expected colon');\n                }\n                if (!nextJSONToken(streamState, token)) {\n                    fail('expected value');\n                }\n                state = 2 /* DICT_STATE_COMMA */;\n                if (token.type === 1 /* STRING */) {\n                    cur[keyValue] = token.value;\n                    continue;\n                }\n                if (token.type === 8 /* NULL */) {\n                    cur[keyValue] = null;\n                    continue;\n                }\n                if (token.type === 9 /* TRUE */) {\n                    cur[keyValue] = true;\n                    continue;\n                }\n                if (token.type === 10 /* FALSE */) {\n                    cur[keyValue] = false;\n                    continue;\n                }\n                if (token.type === 11 /* NUMBER */) {\n                    cur[keyValue] = parseFloat(token.value);\n                    continue;\n                }\n                if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                    let newArr = [];\n                    cur[keyValue] = newArr;\n                    pushState();\n                    state = 4 /* ARR_STATE */;\n                    cur = newArr;\n                    continue;\n                }\n                if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                    let newDict = {};\n                    if (withMetadata) {\n                        newDict.$vscodeTextmateLocation = token.toLocation(filename);\n                    }\n                    cur[keyValue] = newDict;\n                    pushState();\n                    state = 1 /* DICT_STATE */;\n                    cur = newDict;\n                    continue;\n                }\n            }\n            fail('unexpected token in dict');\n        }\n        if (state === 5 /* ARR_STATE_COMMA */) {\n            if (token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 7 /* COMMA */) {\n                state = 6 /* ARR_STATE_NO_CLOSE */;\n                continue;\n            }\n            fail('expected , or ]');\n        }\n        if (state === 4 /* ARR_STATE */ || state === 6 /* ARR_STATE_NO_CLOSE */) {\n            if (state === 4 /* ARR_STATE */ && token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\n                popState();\n                continue;\n            }\n            state = 5 /* ARR_STATE_COMMA */;\n            if (token.type === 1 /* STRING */) {\n                cur.push(token.value);\n                continue;\n            }\n            if (token.type === 8 /* NULL */) {\n                cur.push(null);\n                continue;\n            }\n            if (token.type === 9 /* TRUE */) {\n                cur.push(true);\n                continue;\n            }\n            if (token.type === 10 /* FALSE */) {\n                cur.push(false);\n                continue;\n            }\n            if (token.type === 11 /* NUMBER */) {\n                cur.push(parseFloat(token.value));\n                continue;\n            }\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                let newArr = [];\n                cur.push(newArr);\n                pushState();\n                state = 4 /* ARR_STATE */;\n                cur = newArr;\n                continue;\n            }\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                let newDict = {};\n                if (withMetadata) {\n                    newDict.$vscodeTextmateLocation = token.toLocation(filename);\n                }\n                cur.push(newDict);\n                pushState();\n                state = 1 /* DICT_STATE */;\n                cur = newDict;\n                continue;\n            }\n            fail('unexpected token in array');\n        }\n        fail('unknown state');\n    }\n    if (objStack.length !== 0) {\n        fail('unclosed constructs');\n    }\n    return cur;\n}\nexports.parseJSON = parseJSON;\nclass JSONStreamState {\n    constructor(source) {\n        this.source = source;\n        this.pos = 0;\n        this.len = source.length;\n        this.line = 1;\n        this.char = 0;\n    }\n}\nclass JSONToken {\n    constructor() {\n        this.value = null;\n        this.type = 0 /* UNKNOWN */;\n        this.offset = -1;\n        this.len = -1;\n        this.line = -1;\n        this.char = -1;\n    }\n    toLocation(filename) {\n        return {\n            filename: filename,\n            line: this.line,\n            char: this.char\n        };\n    }\n}\n/**\n * precondition: the string is known to be valid JSON (https://www.ietf.org/rfc/rfc4627.txt)\n */\nfunction nextJSONToken(_state, _out) {\n    _out.value = null;\n    _out.type = 0 /* UNKNOWN */;\n    _out.offset = -1;\n    _out.len = -1;\n    _out.line = -1;\n    _out.char = -1;\n    let source = _state.source;\n    let pos = _state.pos;\n    let len = _state.len;\n    let line = _state.line;\n    let char = _state.char;\n    //------------------------ skip whitespace\n    let chCode;\n    do {\n        if (pos >= len) {\n            return false; /*EOS*/\n        }\n        chCode = source.charCodeAt(pos);\n        if (chCode === 32 /* SPACE */ || chCode === 9 /* HORIZONTAL_TAB */ || chCode === 13 /* CARRIAGE_RETURN */) {\n            // regular whitespace\n            pos++;\n            char++;\n            continue;\n        }\n        if (chCode === 10 /* LINE_FEED */) {\n            // newline\n            pos++;\n            line++;\n            char = 0;\n            continue;\n        }\n        // not whitespace\n        break;\n    } while (true);\n    _out.offset = pos;\n    _out.line = line;\n    _out.char = char;\n    if (chCode === 34 /* QUOTATION_MARK */) {\n        //------------------------ strings\n        _out.type = 1 /* STRING */;\n        pos++;\n        char++;\n        do {\n            if (pos >= len) {\n                return false; /*EOS*/\n            }\n            chCode = source.charCodeAt(pos);\n            pos++;\n            char++;\n            if (chCode === 92 /* BACKSLASH */) {\n                // skip next char\n                pos++;\n                char++;\n                continue;\n            }\n            if (chCode === 34 /* QUOTATION_MARK */) {\n                // end of the string\n                break;\n            }\n        } while (true);\n        _out.value = source.substring(_out.offset + 1, pos - 1).replace(/\\\\u([0-9A-Fa-f]{4})/g, (_, m0) => {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/\\\\(.)/g, (_, m0) => {\n            switch (m0) {\n                case '\"': return '\"';\n                case '\\\\': return '\\\\';\n                case '/': return '/';\n                case 'b': return '\\b';\n                case 'f': return '\\f';\n                case 'n': return '\\n';\n                case 'r': return '\\r';\n                case 't': return '\\t';\n                default: doFail(_state, 'invalid escape sequence');\n            }\n            throw new Error('unreachable');\n        });\n    }\n    else if (chCode === 91 /* LEFT_SQUARE_BRACKET */) {\n        _out.type = 2 /* LEFT_SQUARE_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 123 /* LEFT_CURLY_BRACKET */) {\n        _out.type = 3 /* LEFT_CURLY_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 93 /* RIGHT_SQUARE_BRACKET */) {\n        _out.type = 4 /* RIGHT_SQUARE_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 125 /* RIGHT_CURLY_BRACKET */) {\n        _out.type = 5 /* RIGHT_CURLY_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 58 /* COLON */) {\n        _out.type = 6 /* COLON */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 44 /* COMMA */) {\n        _out.type = 7 /* COMMA */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 110 /* n */) {\n        //------------------------ null\n        _out.type = 8 /* NULL */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 117 /* u */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else if (chCode === 116 /* t */) {\n        //------------------------ true\n        _out.type = 9 /* TRUE */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 114 /* r */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 117 /* u */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 101 /* e */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else if (chCode === 102 /* f */) {\n        //------------------------ false\n        _out.type = 10 /* FALSE */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 97 /* a */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 115 /* s */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 101 /* e */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else {\n        //------------------------ numbers\n        _out.type = 11 /* NUMBER */;\n        do {\n            if (pos >= len) {\n                return false; /*EOS*/\n            }\n            chCode = source.charCodeAt(pos);\n            if (chCode === 46 /* DOT */\n                || (chCode >= 48 /* D0 */ && chCode <= 57 /* D9 */)\n                || (chCode === 101 /* e */ || chCode === 69 /* E */)\n                || (chCode === 45 /* MINUS */ || chCode === 43 /* PLUS */)) {\n                // looks like a piece of a number\n                pos++;\n                char++;\n                continue;\n            }\n            // pos--; char--;\n            break;\n        } while (true);\n    }\n    _out.len = pos - _out.offset;\n    if (_out.value === null) {\n        _out.value = source.substr(_out.offset, _out.len);\n    }\n    _state.pos = pos;\n    _state.line = line;\n    _state.char = char;\n    // console.log('PRODUCING TOKEN: ', _out.value, JSONTokenType[_out.type]);\n    return true;\n}\n//# sourceMappingURL=json.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRawGrammar = exports.INITIAL = exports.Registry = void 0;\nconst grammar_1 = require(\"./grammar\");\nconst grammarReader = require(\"./parseRawGrammar\");\nconst registry_1 = require(\"./registry\");\nconst theme_1 = require(\"./theme\");\nconst grammarDependencies_1 = require(\"./grammar/grammarDependencies\");\n__exportStar(require(\"./onigLib\"), exports);\n/**\n * The registry that will hold all grammars.\n */\nclass Registry {\n    constructor(options) {\n        this._options = options;\n        this._syncRegistry = new registry_1.SyncRegistry(theme_1.Theme.createFromRawTheme(options.theme, options.colorMap), options.onigLib);\n        this._ensureGrammarCache = new Map();\n    }\n    dispose() {\n        this._syncRegistry.dispose();\n    }\n    /**\n     * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n     */\n    setTheme(theme, colorMap) {\n        this._syncRegistry.setTheme(theme_1.Theme.createFromRawTheme(theme, colorMap));\n    }\n    /**\n     * Returns a lookup array for color ids.\n     */\n    getColorMap() {\n        return this._syncRegistry.getColorMap();\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n        return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n        return this._loadGrammar(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes, new grammar_1.BalancedBracketSelectors(configuration.balancedBracketSelectors || [], configuration.unbalancedBracketSelectors || []));\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     */\n    loadGrammar(initialScopeName) {\n        return this._loadGrammar(initialScopeName, 0, null, null, null);\n    }\n    async _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        const dependencyProcessor = new grammarDependencies_1.ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n        while (dependencyProcessor.Q.length > 0) {\n            await Promise.all(dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName)));\n            dependencyProcessor.processQueue();\n        }\n        return this._grammarForScopeName(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n    async _loadSingleGrammar(scopeName) {\n        if (!this._ensureGrammarCache.has(scopeName)) {\n            this._ensureGrammarCache.set(scopeName, this._doLoadSingleGrammar(scopeName));\n        }\n        return this._ensureGrammarCache.get(scopeName);\n    }\n    async _doLoadSingleGrammar(scopeName) {\n        const grammar = await this._options.loadGrammar(scopeName);\n        if (grammar) {\n            const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : undefined;\n            this._syncRegistry.addGrammar(grammar, injections);\n        }\n    }\n    /**\n     * Adds a rawGrammar.\n     */\n    async addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n        this._syncRegistry.addGrammar(rawGrammar, injections);\n        return (await this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages));\n    }\n    /**\n     * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n     */\n    _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n        return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n}\nexports.Registry = Registry;\nexports.INITIAL = grammar_1.StateStack.NULL;\nexports.parseRawGrammar = grammarReader.parseRawGrammar;\n//# sourceMappingURL=main.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMatchers = void 0;\nfunction createMatchers(selector, matchesName) {\n    const results = [];\n    const tokenizer = newTokenizer(selector);\n    let token = tokenizer.next();\n    while (token !== null) {\n        let priority = 0;\n        if (token.length === 2 && token.charAt(1) === ':') {\n            switch (token.charAt(0)) {\n                case 'R':\n                    priority = 1;\n                    break;\n                case 'L':\n                    priority = -1;\n                    break;\n                default:\n                    console.log(`Unknown priority ${token} in scope selector`);\n            }\n            token = tokenizer.next();\n        }\n        let matcher = parseConjunction();\n        results.push({ matcher, priority });\n        if (token !== ',') {\n            break;\n        }\n        token = tokenizer.next();\n    }\n    return results;\n    function parseOperand() {\n        if (token === '-') {\n            token = tokenizer.next();\n            const expressionToNegate = parseOperand();\n            return matcherInput => !!expressionToNegate && !expressionToNegate(matcherInput);\n        }\n        if (token === '(') {\n            token = tokenizer.next();\n            const expressionInParents = parseInnerExpression();\n            if (token === ')') {\n                token = tokenizer.next();\n            }\n            return expressionInParents;\n        }\n        if (isIdentifier(token)) {\n            const identifiers = [];\n            do {\n                identifiers.push(token);\n                token = tokenizer.next();\n            } while (isIdentifier(token));\n            return matcherInput => matchesName(identifiers, matcherInput);\n        }\n        return null;\n    }\n    function parseConjunction() {\n        const matchers = [];\n        let matcher = parseOperand();\n        while (matcher) {\n            matchers.push(matcher);\n            matcher = parseOperand();\n        }\n        return matcherInput => matchers.every(matcher => matcher(matcherInput)); // and\n    }\n    function parseInnerExpression() {\n        const matchers = [];\n        let matcher = parseConjunction();\n        while (matcher) {\n            matchers.push(matcher);\n            if (token === '|' || token === ',') {\n                do {\n                    token = tokenizer.next();\n                } while (token === '|' || token === ','); // ignore subsequent commas\n            }\n            else {\n                break;\n            }\n            matcher = parseConjunction();\n        }\n        return matcherInput => matchers.some(matcher => matcher(matcherInput)); // or\n    }\n}\nexports.createMatchers = createMatchers;\nfunction isIdentifier(token) {\n    return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n    let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n    let match = regex.exec(input);\n    return {\n        next: () => {\n            if (!match) {\n                return null;\n            }\n            const res = match[0];\n            match = regex.exec(input);\n            return res;\n        }\n    };\n}\n//# sourceMappingURL=matcher.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.disposeOnigString = void 0;\nfunction disposeOnigString(str) {\n    if (typeof str.dispose === 'function') {\n        str.dispose();\n    }\n}\nexports.disposeOnigString = disposeOnigString;\n//# sourceMappingURL=onigLib.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRawGrammar = void 0;\nconst plist = require(\"./plist\");\nconst debug_1 = require(\"./debug\");\nconst json_1 = require(\"./json\");\nfunction parseRawGrammar(content, filePath = null) {\n    if (filePath !== null && /\\.json$/.test(filePath)) {\n        return parseJSONGrammar(content, filePath);\n    }\n    return parsePLISTGrammar(content, filePath);\n}\nexports.parseRawGrammar = parseRawGrammar;\nfunction parseJSONGrammar(contents, filename) {\n    if (debug_1.DebugFlags.InDebugMode) {\n        return json_1.parseJSON(contents, filename, true);\n    }\n    return JSON.parse(contents);\n}\nfunction parsePLISTGrammar(contents, filename) {\n    if (debug_1.DebugFlags.InDebugMode) {\n        return plist.parseWithLocation(contents, filename, '$vscodeTextmateLocation');\n    }\n    return plist.parsePLIST(contents);\n}\n//# sourceMappingURL=parseRawGrammar.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parsePLIST = exports.parseWithLocation = void 0;\nfunction parseWithLocation(content, filename, locationKeyName) {\n    return _parse(content, filename, locationKeyName);\n}\nexports.parseWithLocation = parseWithLocation;\n/**\n * A very fast plist parser\n */\nfunction parsePLIST(content) {\n    return _parse(content, null, null);\n}\nexports.parsePLIST = parsePLIST;\nfunction _parse(content, filename, locationKeyName) {\n    const len = content.length;\n    let pos = 0;\n    let line = 1;\n    let char = 0;\n    // Skip UTF8 BOM\n    if (len > 0 && content.charCodeAt(0) === 65279 /* BOM */) {\n        pos = 1;\n    }\n    function advancePosBy(by) {\n        if (locationKeyName === null) {\n            pos = pos + by;\n        }\n        else {\n            while (by > 0) {\n                let chCode = content.charCodeAt(pos);\n                if (chCode === 10 /* LINE_FEED */) {\n                    pos++;\n                    line++;\n                    char = 0;\n                }\n                else {\n                    pos++;\n                    char++;\n                }\n                by--;\n            }\n        }\n    }\n    function advancePosTo(to) {\n        if (locationKeyName === null) {\n            pos = to;\n        }\n        else {\n            advancePosBy(to - pos);\n        }\n    }\n    function skipWhitespace() {\n        while (pos < len) {\n            let chCode = content.charCodeAt(pos);\n            if (chCode !== 32 /* SPACE */ && chCode !== 9 /* TAB */ && chCode !== 13 /* CARRIAGE_RETURN */ && chCode !== 10 /* LINE_FEED */) {\n                break;\n            }\n            advancePosBy(1);\n        }\n    }\n    function advanceIfStartsWith(str) {\n        if (content.substr(pos, str.length) === str) {\n            advancePosBy(str.length);\n            return true;\n        }\n        return false;\n    }\n    function advanceUntil(str) {\n        let nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            advancePosTo(nextOccurence + str.length);\n        }\n        else {\n            // EOF\n            advancePosTo(len);\n        }\n    }\n    function captureUntil(str) {\n        let nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            let r = content.substring(pos, nextOccurence);\n            advancePosTo(nextOccurence + str.length);\n            return r;\n        }\n        else {\n            // EOF\n            let r = content.substr(pos);\n            advancePosTo(len);\n            return r;\n        }\n    }\n    let state = 0 /* ROOT_STATE */;\n    let cur = null;\n    let stateStack = [];\n    let objStack = [];\n    let curKey = null;\n    function pushState(newState, newCur) {\n        stateStack.push(state);\n        objStack.push(cur);\n        state = newState;\n        cur = newCur;\n    }\n    function popState() {\n        if (stateStack.length === 0) {\n            return fail('illegal state stack');\n        }\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        throw new Error('Near offset ' + pos + ': ' + msg + ' ~~~' + content.substr(pos, 50) + '~~~');\n    }\n    const dictState = {\n        enterDict: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            let newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur[curKey] = newDict;\n            curKey = null;\n            pushState(1 /* DICT_STATE */, newDict);\n        },\n        enterArray: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            let newArr = [];\n            cur[curKey] = newArr;\n            curKey = null;\n            pushState(2 /* ARR_STATE */, newArr);\n        }\n    };\n    const arrState = {\n        enterDict: function () {\n            let newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur.push(newDict);\n            pushState(1 /* DICT_STATE */, newDict);\n        },\n        enterArray: function () {\n            let newArr = [];\n            cur.push(newArr);\n            pushState(2 /* ARR_STATE */, newArr);\n        }\n    };\n    function enterDict() {\n        if (state === 1 /* DICT_STATE */) {\n            dictState.enterDict();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            arrState.enterDict();\n        }\n        else { // ROOT_STATE\n            cur = {};\n            if (locationKeyName !== null) {\n                cur[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            pushState(1 /* DICT_STATE */, cur);\n        }\n    }\n    function leaveDict() {\n        if (state === 1 /* DICT_STATE */) {\n            popState();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            return fail('unexpected </dict>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </dict>');\n        }\n    }\n    function enterArray() {\n        if (state === 1 /* DICT_STATE */) {\n            dictState.enterArray();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            arrState.enterArray();\n        }\n        else { // ROOT_STATE\n            cur = [];\n            pushState(2 /* ARR_STATE */, cur);\n        }\n    }\n    function leaveArray() {\n        if (state === 1 /* DICT_STATE */) {\n            return fail('unexpected </array>');\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            popState();\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </array>');\n        }\n    }\n    function acceptKey(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey !== null) {\n                return fail('too many <key>');\n            }\n            curKey = val;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            return fail('unexpected <key>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected <key>');\n        }\n    }\n    function acceptString(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptReal(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse float');\n        }\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptInteger(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse integer');\n        }\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptDate(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptData(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptBool(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function escapeVal(str) {\n        return str.replace(/&#([0-9]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 10));\n        }).replace(/&#x([0-9a-f]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function (_) {\n            switch (_) {\n                case '&amp;': return '&';\n                case '&lt;': return '<';\n                case '&gt;': return '>';\n                case '&quot;': return '\"';\n                case '&apos;': return '\\'';\n            }\n            return _;\n        });\n    }\n    function parseOpenTag() {\n        let r = captureUntil('>');\n        let isClosed = false;\n        if (r.charCodeAt(r.length - 1) === 47 /* SLASH */) {\n            isClosed = true;\n            r = r.substring(0, r.length - 1);\n        }\n        return {\n            name: r.trim(),\n            isClosed: isClosed\n        };\n    }\n    function parseTagValue(tag) {\n        if (tag.isClosed) {\n            return '';\n        }\n        let val = captureUntil('</');\n        advanceUntil('>');\n        return escapeVal(val);\n    }\n    while (pos < len) {\n        skipWhitespace();\n        if (pos >= len) {\n            break;\n        }\n        const chCode = content.charCodeAt(pos);\n        advancePosBy(1);\n        if (chCode !== 60 /* LESS_THAN */) {\n            return fail('expected <');\n        }\n        if (pos >= len) {\n            return fail('unexpected end of input');\n        }\n        const peekChCode = content.charCodeAt(pos);\n        if (peekChCode === 63 /* QUESTION_MARK */) {\n            advancePosBy(1);\n            advanceUntil('?>');\n            continue;\n        }\n        if (peekChCode === 33 /* EXCLAMATION_MARK */) {\n            advancePosBy(1);\n            if (advanceIfStartsWith('--')) {\n                advanceUntil('-->');\n                continue;\n            }\n            advanceUntil('>');\n            continue;\n        }\n        if (peekChCode === 47 /* SLASH */) {\n            advancePosBy(1);\n            skipWhitespace();\n            if (advanceIfStartsWith('plist')) {\n                advanceUntil('>');\n                continue;\n            }\n            if (advanceIfStartsWith('dict')) {\n                advanceUntil('>');\n                leaveDict();\n                continue;\n            }\n            if (advanceIfStartsWith('array')) {\n                advanceUntil('>');\n                leaveArray();\n                continue;\n            }\n            return fail('unexpected closed tag');\n        }\n        let tag = parseOpenTag();\n        switch (tag.name) {\n            case 'dict':\n                enterDict();\n                if (tag.isClosed) {\n                    leaveDict();\n                }\n                continue;\n            case 'array':\n                enterArray();\n                if (tag.isClosed) {\n                    leaveArray();\n                }\n                continue;\n            case 'key':\n                acceptKey(parseTagValue(tag));\n                continue;\n            case 'string':\n                acceptString(parseTagValue(tag));\n                continue;\n            case 'real':\n                acceptReal(parseFloat(parseTagValue(tag)));\n                continue;\n            case 'integer':\n                acceptInteger(parseInt(parseTagValue(tag), 10));\n                continue;\n            case 'date':\n                acceptDate(new Date(parseTagValue(tag)));\n                continue;\n            case 'data':\n                acceptData(parseTagValue(tag));\n                continue;\n            case 'true':\n                parseTagValue(tag);\n                acceptBool(true);\n                continue;\n            case 'false':\n                parseTagValue(tag);\n                acceptBool(false);\n                continue;\n        }\n        if (/^plist/.test(tag.name)) {\n            continue;\n        }\n        return fail('unexpected opened tag ' + tag.name);\n    }\n    return cur;\n}\n//# sourceMappingURL=plist.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyncRegistry = void 0;\nconst grammar_1 = require(\"./grammar\");\nclass SyncRegistry {\n    constructor(theme, _onigLibPromise) {\n        this._onigLibPromise = _onigLibPromise;\n        this._grammars = new Map();\n        this._rawGrammars = new Map();\n        this._injectionGrammars = new Map();\n        this._theme = theme;\n    }\n    dispose() {\n        for (const grammar of this._grammars.values()) {\n            grammar.dispose();\n        }\n    }\n    setTheme(theme) {\n        this._theme = theme;\n    }\n    getColorMap() {\n        return this._theme.getColorMap();\n    }\n    /**\n     * Add `grammar` to registry and return a list of referenced scope names\n     */\n    addGrammar(grammar, injectionScopeNames) {\n        this._rawGrammars.set(grammar.scopeName, grammar);\n        if (injectionScopeNames) {\n            this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n        }\n    }\n    /**\n     * Lookup a raw grammar.\n     */\n    lookup(scopeName) {\n        return this._rawGrammars.get(scopeName);\n    }\n    /**\n     * Returns the injections for the given grammar\n     */\n    injections(targetScope) {\n        return this._injectionGrammars.get(targetScope);\n    }\n    /**\n     * Get the default theme settings\n     */\n    getDefaults() {\n        return this._theme.getDefaults();\n    }\n    /**\n     * Match a scope in the theme.\n     */\n    themeMatch(scopePath) {\n        return this._theme.match(scopePath);\n    }\n    /**\n     * Lookup a grammar.\n     */\n    async grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        if (!this._grammars.has(scopeName)) {\n            let rawGrammar = this._rawGrammars.get(scopeName);\n            if (!rawGrammar) {\n                return null;\n            }\n            this._grammars.set(scopeName, grammar_1.createGrammar(scopeName, rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, this, await this._onigLibPromise));\n        }\n        return this._grammars.get(scopeName);\n    }\n}\nexports.SyncRegistry = SyncRegistry;\n//# sourceMappingURL=registry.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompiledRule = exports.RegExpSourceList = exports.RegExpSource = exports.RuleFactory = exports.BeginWhileRule = exports.BeginEndRule = exports.IncludeOnlyRule = exports.MatchRule = exports.CaptureRule = exports.Rule = exports.ruleIdToNumber = exports.ruleIdFromNumber = exports.whileRuleId = exports.endRuleId = void 0;\nconst utils_1 = require(\"./utils\");\nconst grammarDependencies_1 = require(\"./grammar/grammarDependencies\");\nconst HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nconst BACK_REFERENCING_END = /\\\\(\\d+)/g;\nconst ruleIdSymbol = Symbol('RuleId');\n// This is a special constant to indicate that the end regexp matched.\nexports.endRuleId = -1;\n// This is a special constant to indicate that the while regexp matched.\nexports.whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n    return id;\n}\nexports.ruleIdFromNumber = ruleIdFromNumber;\nfunction ruleIdToNumber(id) {\n    return id;\n}\nexports.ruleIdToNumber = ruleIdToNumber;\nclass Rule {\n    constructor($location, id, name, contentName) {\n        this.$location = $location;\n        this.id = id;\n        this._name = name || null;\n        this._nameIsCapturing = utils_1.RegexSource.hasCaptures(this._name);\n        this._contentName = contentName || null;\n        this._contentNameIsCapturing = utils_1.RegexSource.hasCaptures(this._contentName);\n    }\n    get debugName() {\n        const location = this.$location ? `${utils_1.basename(this.$location.filename)}:${this.$location.line}` : 'unknown';\n        return `${this.constructor.name}#${this.id} @ ${location}`;\n    }\n    getName(lineText, captureIndices) {\n        if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n            return this._name;\n        }\n        return utils_1.RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n    }\n    getContentName(lineText, captureIndices) {\n        if (!this._contentNameIsCapturing || this._contentName === null) {\n            return this._contentName;\n        }\n        return utils_1.RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n    }\n}\nexports.Rule = Rule;\nclass CaptureRule extends Rule {\n    constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n        super($location, id, name, contentName);\n        this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n    }\n    dispose() {\n        // nothing to dispose\n    }\n    collectPatterns(grammar, out) {\n        throw new Error('Not supported!');\n    }\n    compile(grammar, endRegexSource) {\n        throw new Error('Not supported!');\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        throw new Error('Not supported!');\n    }\n}\nexports.CaptureRule = CaptureRule;\nclass MatchRule extends Rule {\n    constructor($location, id, name, match, captures) {\n        super($location, id, name, null);\n        this._match = new RegExpSource(match, this.id);\n        this.captures = captures;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugMatchRegExp() {\n        return `${this._match.source}`;\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._match);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.MatchRule = MatchRule;\nclass IncludeOnlyRule extends Rule {\n    constructor($location, id, name, contentName, patterns) {\n        super($location, id, name, contentName);\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    collectPatterns(grammar, out) {\n        for (const pattern of this.patterns) {\n            const rule = grammar.getRule(pattern);\n            rule.collectPatterns(grammar, out);\n        }\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.IncludeOnlyRule = IncludeOnlyRule;\nclass BeginEndRule extends Rule {\n    constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this._end = new RegExpSource(end ? end : '\\uFFFF', -1);\n        this.endHasBackReferences = this._end.hasBackReferences;\n        this.endCaptures = endCaptures;\n        this.applyEndPatternLast = applyEndPatternLast || false;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugEndRegExp() {\n        return `${this._end.source}`;\n    }\n    getEndWithResolvedBackReferences(lineText, captureIndices) {\n        return this._end.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n            else {\n                this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n        }\n        if (this._end.hasBackReferences) {\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n            }\n            else {\n                this._cachedCompiledPatterns.setSource(0, endRegexSource);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.BeginEndRule = BeginEndRule;\nclass BeginWhileRule extends Rule {\n    constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this.whileCaptures = whileCaptures;\n        this._while = new RegExpSource(_while, exports.whileRuleId);\n        this.whileHasBackReferences = this._while.hasBackReferences;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n        this._cachedCompiledWhilePatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n        if (this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns.dispose();\n            this._cachedCompiledWhilePatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugWhileRegExp() {\n        return `${this._while.source}`;\n    }\n    getWhileWithResolvedBackReferences(lineText, captureIndices) {\n        return this._while.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n    compileWhile(grammar, endRegexSource) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns = new RegExpSourceList();\n            this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n        }\n        if (this._while.hasBackReferences) {\n            this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : '\\uFFFF');\n        }\n        return this._cachedCompiledWhilePatterns;\n    }\n}\nexports.BeginWhileRule = BeginWhileRule;\nclass RuleFactory {\n    static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n        return helper.registerRule((id) => {\n            return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n        });\n    }\n    static getCompiledRuleId(desc, helper, repository) {\n        if (!desc.id) {\n            helper.registerRule((id) => {\n                desc.id = id;\n                if (desc.match) {\n                    return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\n                }\n                if (typeof desc.begin === 'undefined') {\n                    if (desc.repository) {\n                        repository = utils_1.mergeObjects({}, repository, desc.repository);\n                    }\n                    let patterns = desc.patterns;\n                    if (typeof patterns === 'undefined' && desc.include) {\n                        patterns = [{ include: desc.include }];\n                    }\n                    return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(patterns, helper, repository));\n                }\n                if (desc.while) {\n                    return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\n                }\n                return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n            });\n        }\n        return desc.id;\n    }\n    static _compileCaptures(captures, helper, repository) {\n        let r = [];\n        if (captures) {\n            // Find the maximum capture id\n            let maximumCaptureId = 0;\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                if (numericCaptureId > maximumCaptureId) {\n                    maximumCaptureId = numericCaptureId;\n                }\n            }\n            // Initialize result\n            for (let i = 0; i <= maximumCaptureId; i++) {\n                r[i] = null;\n            }\n            // Fill out result\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                let retokenizeCapturedWithRuleId = 0;\n                if (captures[captureId].patterns) {\n                    retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n                }\n                r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n            }\n        }\n        return r;\n    }\n    static _compilePatterns(patterns, helper, repository) {\n        let r = [];\n        if (patterns) {\n            for (let i = 0, len = patterns.length; i < len; i++) {\n                const pattern = patterns[i];\n                let ruleId = -1;\n                if (pattern.include) {\n                    const reference = grammarDependencies_1.parseInclude(pattern.include);\n                    switch (reference.kind) {\n                        case 0 /* Base */:\n                        case 1 /* Self */:\n                            ruleId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n                            break;\n                        case 2 /* RelativeReference */:\n                            // Local include found in `repository`\n                            let localIncludedRule = repository[reference.ruleName];\n                            if (localIncludedRule) {\n                                ruleId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n                            }\n                            else {\n                                // console.warn('CANNOT find rule for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                            }\n                            break;\n                        case 3 /* TopLevelReference */:\n                        case 4 /* TopLevelRepositoryReference */:\n                            const externalGrammarName = reference.scopeName;\n                            const externalGrammarInclude = reference.kind === 4 /* TopLevelRepositoryReference */\n                                ? reference.ruleName\n                                : null;\n                            // External include\n                            const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n                            if (externalGrammar) {\n                                if (externalGrammarInclude) {\n                                    let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                                    if (externalIncludedRule) {\n                                        ruleId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                                    }\n                                    else {\n                                        // console.warn('CANNOT find rule for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                                    }\n                                }\n                                else {\n                                    ruleId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                                }\n                            }\n                            else {\n                                // console.warn('CANNOT find grammar for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                            }\n                            break;\n                    }\n                }\n                else {\n                    ruleId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\n                }\n                if (ruleId !== -1) {\n                    const rule = helper.getRule(ruleId);\n                    let skipRule = false;\n                    if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n                        if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n                            skipRule = true;\n                        }\n                    }\n                    if (skipRule) {\n                        // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\n                        continue;\n                    }\n                    r.push(ruleId);\n                }\n            }\n        }\n        return {\n            patterns: r,\n            hasMissingPatterns: ((patterns ? patterns.length : 0) !== r.length)\n        };\n    }\n}\nexports.RuleFactory = RuleFactory;\nclass RegExpSource {\n    constructor(regExpSource, ruleId) {\n        if (regExpSource) {\n            const len = regExpSource.length;\n            let lastPushedPos = 0;\n            let output = [];\n            let hasAnchor = false;\n            for (let pos = 0; pos < len; pos++) {\n                const ch = regExpSource.charAt(pos);\n                if (ch === '\\\\') {\n                    if (pos + 1 < len) {\n                        const nextCh = regExpSource.charAt(pos + 1);\n                        if (nextCh === 'z') {\n                            output.push(regExpSource.substring(lastPushedPos, pos));\n                            output.push('$(?!\\\\n)(?<!\\\\n)');\n                            lastPushedPos = pos + 2;\n                        }\n                        else if (nextCh === 'A' || nextCh === 'G') {\n                            hasAnchor = true;\n                        }\n                        pos++;\n                    }\n                }\n            }\n            this.hasAnchor = hasAnchor;\n            if (lastPushedPos === 0) {\n                // No \\z hit\n                this.source = regExpSource;\n            }\n            else {\n                output.push(regExpSource.substring(lastPushedPos, len));\n                this.source = output.join('');\n            }\n        }\n        else {\n            this.hasAnchor = false;\n            this.source = regExpSource;\n        }\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n        else {\n            this._anchorCache = null;\n        }\n        this.ruleId = ruleId;\n        this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n        // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\n    }\n    clone() {\n        return new RegExpSource(this.source, this.ruleId);\n    }\n    setSource(newSource) {\n        if (this.source === newSource) {\n            return;\n        }\n        this.source = newSource;\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n    }\n    resolveBackReferences(lineText, captureIndices) {\n        let capturedValues = captureIndices.map((capture) => {\n            return lineText.substring(capture.start, capture.end);\n        });\n        BACK_REFERENCING_END.lastIndex = 0;\n        return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n            return utils_1.escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\n        });\n    }\n    _buildAnchorCache() {\n        let A0_G0_result = [];\n        let A0_G1_result = [];\n        let A1_G0_result = [];\n        let A1_G1_result = [];\n        let pos, len, ch, nextCh;\n        for (pos = 0, len = this.source.length; pos < len; pos++) {\n            ch = this.source.charAt(pos);\n            A0_G0_result[pos] = ch;\n            A0_G1_result[pos] = ch;\n            A1_G0_result[pos] = ch;\n            A1_G1_result[pos] = ch;\n            if (ch === '\\\\') {\n                if (pos + 1 < len) {\n                    nextCh = this.source.charAt(pos + 1);\n                    if (nextCh === 'A') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = '\\uFFFF';\n                        A1_G0_result[pos + 1] = 'A';\n                        A1_G1_result[pos + 1] = 'A';\n                    }\n                    else if (nextCh === 'G') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = 'G';\n                        A1_G0_result[pos + 1] = '\\uFFFF';\n                        A1_G1_result[pos + 1] = 'G';\n                    }\n                    else {\n                        A0_G0_result[pos + 1] = nextCh;\n                        A0_G1_result[pos + 1] = nextCh;\n                        A1_G0_result[pos + 1] = nextCh;\n                        A1_G1_result[pos + 1] = nextCh;\n                    }\n                    pos++;\n                }\n            }\n        }\n        return {\n            A0_G0: A0_G0_result.join(''),\n            A0_G1: A0_G1_result.join(''),\n            A1_G0: A1_G0_result.join(''),\n            A1_G1: A1_G1_result.join('')\n        };\n    }\n    resolveAnchors(allowA, allowG) {\n        if (!this.hasAnchor || !this._anchorCache) {\n            return this.source;\n        }\n        if (allowA) {\n            if (allowG) {\n                return this._anchorCache.A1_G1;\n            }\n            else {\n                return this._anchorCache.A1_G0;\n            }\n        }\n        else {\n            if (allowG) {\n                return this._anchorCache.A0_G1;\n            }\n            else {\n                return this._anchorCache.A0_G0;\n            }\n        }\n    }\n}\nexports.RegExpSource = RegExpSource;\nclass RegExpSourceList {\n    constructor() {\n        this._items = [];\n        this._hasAnchors = false;\n        this._cached = null;\n        this._anchorCache = {\n            A0_G0: null,\n            A0_G1: null,\n            A1_G0: null,\n            A1_G1: null\n        };\n    }\n    dispose() {\n        this._disposeCaches();\n    }\n    _disposeCaches() {\n        if (this._cached) {\n            this._cached.dispose();\n            this._cached = null;\n        }\n        if (this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0.dispose();\n            this._anchorCache.A0_G0 = null;\n        }\n        if (this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1.dispose();\n            this._anchorCache.A0_G1 = null;\n        }\n        if (this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0.dispose();\n            this._anchorCache.A1_G0 = null;\n        }\n        if (this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1.dispose();\n            this._anchorCache.A1_G1 = null;\n        }\n    }\n    push(item) {\n        this._items.push(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    unshift(item) {\n        this._items.unshift(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    length() {\n        return this._items.length;\n    }\n    setSource(index, newSource) {\n        if (this._items[index].source !== newSource) {\n            // bust the cache\n            this._disposeCaches();\n            this._items[index].setSource(newSource);\n        }\n    }\n    compile(onigLib) {\n        if (!this._cached) {\n            let regExps = this._items.map(e => e.source);\n            this._cached = new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n        }\n        return this._cached;\n    }\n    compileAG(onigLib, allowA, allowG) {\n        if (!this._hasAnchors) {\n            return this.compile(onigLib);\n        }\n        else {\n            if (allowA) {\n                if (allowG) {\n                    if (!this._anchorCache.A1_G1) {\n                        this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G1;\n                }\n                else {\n                    if (!this._anchorCache.A1_G0) {\n                        this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G0;\n                }\n            }\n            else {\n                if (allowG) {\n                    if (!this._anchorCache.A0_G1) {\n                        this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G1;\n                }\n                else {\n                    if (!this._anchorCache.A0_G0) {\n                        this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G0;\n                }\n            }\n        }\n    }\n    _resolveAnchors(onigLib, allowA, allowG) {\n        let regExps = this._items.map(e => e.resolveAnchors(allowA, allowG));\n        return new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n    }\n}\nexports.RegExpSourceList = RegExpSourceList;\nclass CompiledRule {\n    constructor(onigLib, regExps, rules) {\n        this.regExps = regExps;\n        this.rules = rules;\n        this.scanner = onigLib.createOnigScanner(regExps);\n    }\n    dispose() {\n        if (typeof this.scanner.dispose === \"function\") {\n            this.scanner.dispose();\n        }\n    }\n    toString() {\n        const r = [];\n        for (let i = 0, len = this.rules.length; i < len; i++) {\n            r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n        }\n        return r.join(\"\\n\");\n    }\n    findNextMatchSync(string, startPosition, options) {\n        const result = this.scanner.findNextMatchSync(string, startPosition, options);\n        if (!result) {\n            return null;\n        }\n        return {\n            ruleId: this.rules[result.index],\n            captureIndices: result.captureIndices,\n        };\n    }\n}\nexports.CompiledRule = CompiledRule;\n//# sourceMappingURL=rule.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThemeTrieElement = exports.ThemeTrieElementRule = exports.ColorMap = exports.fontStyleToString = exports.ParsedThemeRule = exports.parseTheme = exports.StyleAttributes = exports.ScopeStack = exports.Theme = void 0;\nconst utils_1 = require(\"./utils\");\nclass Theme {\n    constructor(_colorMap, _defaults, _root) {\n        this._colorMap = _colorMap;\n        this._defaults = _defaults;\n        this._root = _root;\n        this._cachedMatchRoot = new utils_1.CachedFn((scopeName) => this._root.match(scopeName));\n    }\n    static createFromRawTheme(source, colorMap) {\n        return this.createFromParsedTheme(parseTheme(source), colorMap);\n    }\n    static createFromParsedTheme(source, colorMap) {\n        return resolveParsedThemeRules(source, colorMap);\n    }\n    getColorMap() {\n        return this._colorMap.getColorMap();\n    }\n    getDefaults() {\n        return this._defaults;\n    }\n    match(scopePath) {\n        if (scopePath === null) {\n            return this._defaults;\n        }\n        const scopeName = scopePath.scopeName;\n        const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n        const effectiveRule = matchingTrieElements.find((v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes));\n        if (!effectiveRule) {\n            return null;\n        }\n        return new StyleAttributes(effectiveRule.fontStyle, effectiveRule.foreground, effectiveRule.background);\n    }\n}\nexports.Theme = Theme;\nclass ScopeStack {\n    constructor(parent, scopeName) {\n        this.parent = parent;\n        this.scopeName = scopeName;\n    }\n    static from(...segments) {\n        let result = null;\n        for (let i = 0; i < segments.length; i++) {\n            result = new ScopeStack(result, segments[i]);\n        }\n        return result;\n    }\n    push(scopeName) {\n        return new ScopeStack(this, scopeName);\n    }\n    getSegments() {\n        let item = this;\n        const result = [];\n        while (item) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        result.reverse();\n        return result;\n    }\n    toString() {\n        return this.getSegments().join(' ');\n    }\n}\nexports.ScopeStack = ScopeStack;\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n    if (parentScopes === null) {\n        return true;\n    }\n    let index = 0;\n    let scopePattern = parentScopes[index];\n    while (scopePath) {\n        if (_matchesScope(scopePath.scopeName, scopePattern)) {\n            index++;\n            if (index === parentScopes.length) {\n                return true;\n            }\n            scopePattern = parentScopes[index];\n        }\n        scopePath = scopePath.parent;\n    }\n    return false;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n    return scopePattern === scopeName || (scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === '.');\n}\nclass StyleAttributes {\n    constructor(fontStyle, foregroundId, backgroundId) {\n        this.fontStyle = fontStyle;\n        this.foregroundId = foregroundId;\n        this.backgroundId = backgroundId;\n    }\n}\nexports.StyleAttributes = StyleAttributes;\n/**\n * Parse a raw theme into rules.\n */\nfunction parseTheme(source) {\n    if (!source) {\n        return [];\n    }\n    if (!source.settings || !Array.isArray(source.settings)) {\n        return [];\n    }\n    let settings = source.settings;\n    let result = [], resultLen = 0;\n    for (let i = 0, len = settings.length; i < len; i++) {\n        let entry = settings[i];\n        if (!entry.settings) {\n            continue;\n        }\n        let scopes;\n        if (typeof entry.scope === 'string') {\n            let _scope = entry.scope;\n            // remove leading commas\n            _scope = _scope.replace(/^[,]+/, '');\n            // remove trailing commans\n            _scope = _scope.replace(/[,]+$/, '');\n            scopes = _scope.split(',');\n        }\n        else if (Array.isArray(entry.scope)) {\n            scopes = entry.scope;\n        }\n        else {\n            scopes = [''];\n        }\n        let fontStyle = -1 /* NotSet */;\n        if (typeof entry.settings.fontStyle === 'string') {\n            fontStyle = 0 /* None */;\n            let segments = entry.settings.fontStyle.split(' ');\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n                let segment = segments[j];\n                switch (segment) {\n                    case 'italic':\n                        fontStyle = fontStyle | 1 /* Italic */;\n                        break;\n                    case 'bold':\n                        fontStyle = fontStyle | 2 /* Bold */;\n                        break;\n                    case 'underline':\n                        fontStyle = fontStyle | 4 /* Underline */;\n                        break;\n                    case 'strikethrough':\n                        fontStyle = fontStyle | 8 /* Strikethrough */;\n                        break;\n                }\n            }\n        }\n        let foreground = null;\n        if (typeof entry.settings.foreground === 'string' && utils_1.isValidHexColor(entry.settings.foreground)) {\n            foreground = entry.settings.foreground;\n        }\n        let background = null;\n        if (typeof entry.settings.background === 'string' && utils_1.isValidHexColor(entry.settings.background)) {\n            background = entry.settings.background;\n        }\n        for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n            let _scope = scopes[j].trim();\n            let segments = _scope.split(' ');\n            let scope = segments[segments.length - 1];\n            let parentScopes = null;\n            if (segments.length > 1) {\n                parentScopes = segments.slice(0, segments.length - 1);\n                parentScopes.reverse();\n            }\n            result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\n        }\n    }\n    return result;\n}\nexports.parseTheme = parseTheme;\nclass ParsedThemeRule {\n    constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n        this.scope = scope;\n        this.parentScopes = parentScopes;\n        this.index = index;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n}\nexports.ParsedThemeRule = ParsedThemeRule;\nfunction fontStyleToString(fontStyle) {\n    if (fontStyle === -1 /* NotSet */) {\n        return 'not set';\n    }\n    let style = '';\n    if (fontStyle & 1 /* Italic */) {\n        style += 'italic ';\n    }\n    if (fontStyle & 2 /* Bold */) {\n        style += 'bold ';\n    }\n    if (fontStyle & 4 /* Underline */) {\n        style += 'underline ';\n    }\n    if (fontStyle & 8 /* Strikethrough */) {\n        style += 'strikethrough ';\n    }\n    if (style === '') {\n        style = 'none';\n    }\n    return style.trim();\n}\nexports.fontStyleToString = fontStyleToString;\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n    // Sort rules lexicographically, and then by index if necessary\n    parsedThemeRules.sort((a, b) => {\n        let r = utils_1.strcmp(a.scope, b.scope);\n        if (r !== 0) {\n            return r;\n        }\n        r = utils_1.strArrCmp(a.parentScopes, b.parentScopes);\n        if (r !== 0) {\n            return r;\n        }\n        return a.index - b.index;\n    });\n    // Determine defaults\n    let defaultFontStyle = 0 /* None */;\n    let defaultForeground = '#000000';\n    let defaultBackground = '#ffffff';\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\n        let incomingDefaults = parsedThemeRules.shift();\n        if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\n            defaultFontStyle = incomingDefaults.fontStyle;\n        }\n        if (incomingDefaults.foreground !== null) {\n            defaultForeground = incomingDefaults.foreground;\n        }\n        if (incomingDefaults.background !== null) {\n            defaultBackground = incomingDefaults.background;\n        }\n    }\n    let colorMap = new ColorMap(_colorMap);\n    let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n    let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n        let rule = parsedThemeRules[i];\n        root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n    }\n    return new Theme(colorMap, defaults, root);\n}\nclass ColorMap {\n    constructor(_colorMap) {\n        this._lastColorId = 0;\n        this._id2color = [];\n        this._color2id = Object.create(null);\n        if (Array.isArray(_colorMap)) {\n            this._isFrozen = true;\n            for (let i = 0, len = _colorMap.length; i < len; i++) {\n                this._color2id[_colorMap[i]] = i;\n                this._id2color[i] = _colorMap[i];\n            }\n        }\n        else {\n            this._isFrozen = false;\n        }\n    }\n    getId(color) {\n        if (color === null) {\n            return 0;\n        }\n        color = color.toUpperCase();\n        let value = this._color2id[color];\n        if (value) {\n            return value;\n        }\n        if (this._isFrozen) {\n            throw new Error(`Missing color in color map - ${color}`);\n        }\n        value = ++this._lastColorId;\n        this._color2id[color] = value;\n        this._id2color[value] = color;\n        return value;\n    }\n    getColorMap() {\n        return this._id2color.slice(0);\n    }\n}\nexports.ColorMap = ColorMap;\nclass ThemeTrieElementRule {\n    constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        this.scopeDepth = scopeDepth;\n        this.parentScopes = parentScopes;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n    clone() {\n        return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n    }\n    static cloneArr(arr) {\n        let r = [];\n        for (let i = 0, len = arr.length; i < len; i++) {\n            r[i] = arr[i].clone();\n        }\n        return r;\n    }\n    acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n        if (this.scopeDepth > scopeDepth) {\n            console.log('how did this happen?');\n        }\n        else {\n            this.scopeDepth = scopeDepth;\n        }\n        // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\n        if (fontStyle !== -1 /* NotSet */) {\n            this.fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            this.foreground = foreground;\n        }\n        if (background !== 0) {\n            this.background = background;\n        }\n    }\n}\nexports.ThemeTrieElementRule = ThemeTrieElementRule;\nclass ThemeTrieElement {\n    constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n        this._mainRule = _mainRule;\n        this._children = _children;\n        this._rulesWithParentScopes = rulesWithParentScopes;\n    }\n    static _sortBySpecificity(arr) {\n        if (arr.length === 1) {\n            return arr;\n        }\n        arr.sort(this._cmpBySpecificity);\n        return arr;\n    }\n    static _cmpBySpecificity(a, b) {\n        if (a.scopeDepth === b.scopeDepth) {\n            const aParentScopes = a.parentScopes;\n            const bParentScopes = b.parentScopes;\n            let aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\n            let bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\n            if (aParentScopesLen === bParentScopesLen) {\n                for (let i = 0; i < aParentScopesLen; i++) {\n                    const aLen = aParentScopes[i].length;\n                    const bLen = bParentScopes[i].length;\n                    if (aLen !== bLen) {\n                        return bLen - aLen;\n                    }\n                }\n            }\n            return bParentScopesLen - aParentScopesLen;\n        }\n        return b.scopeDepth - a.scopeDepth;\n    }\n    match(scope) {\n        if (scope === '') {\n            return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        if (this._children.hasOwnProperty(head)) {\n            return this._children[head].match(tail);\n        }\n        return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    }\n    insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n        if (scope === '') {\n            this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n            return;\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        let child;\n        if (this._children.hasOwnProperty(head)) {\n            child = this._children[head];\n        }\n        else {\n            child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n            this._children[head] = child;\n        }\n        child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n    }\n    _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        if (parentScopes === null) {\n            // Merge into the main rule\n            this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n            return;\n        }\n        // Try to merge into existing rule\n        for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n            let rule = this._rulesWithParentScopes[i];\n            if (utils_1.strArrCmp(rule.parentScopes, parentScopes) === 0) {\n                // bingo! => we get to merge this into an existing one\n                rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n                return;\n            }\n        }\n        // Must add a new rule\n        // Inherit from main rule\n        if (fontStyle === -1 /* NotSet */) {\n            fontStyle = this._mainRule.fontStyle;\n        }\n        if (foreground === 0) {\n            foreground = this._mainRule.foreground;\n        }\n        if (background === 0) {\n            background = this._mainRule.background;\n        }\n        this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n    }\n}\nexports.ThemeTrieElement = ThemeTrieElement;\n//# sourceMappingURL=theme.js.map", "\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.performanceNow = exports.CachedFn = exports.escapeRegExpCharacters = exports.isValidHexColor = exports.strArrCmp = exports.strcmp = exports.RegexSource = exports.basename = exports.mergeObjects = exports.clone = void 0;\nfunction clone(something) {\n    return doClone(something);\n}\nexports.clone = clone;\nfunction doClone(something) {\n    if (Array.isArray(something)) {\n        return cloneArray(something);\n    }\n    if (typeof something === 'object') {\n        return cloneObj(something);\n    }\n    return something;\n}\nfunction cloneArray(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        r[i] = doClone(arr[i]);\n    }\n    return r;\n}\nfunction cloneObj(obj) {\n    let r = {};\n    for (let key in obj) {\n        r[key] = doClone(obj[key]);\n    }\n    return r;\n}\nfunction mergeObjects(target, ...sources) {\n    sources.forEach(source => {\n        for (let key in source) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n}\nexports.mergeObjects = mergeObjects;\nfunction basename(path) {\n    const idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n    if (idx === 0) {\n        return path;\n    }\n    else if (~idx === path.length - 1) {\n        return basename(path.substring(0, path.length - 1));\n    }\n    else {\n        return path.substr(~idx + 1);\n    }\n}\nexports.basename = basename;\nlet CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nclass RegexSource {\n    static hasCaptures(regexSource) {\n        if (regexSource === null) {\n            return false;\n        }\n        CAPTURING_REGEX_SOURCE.lastIndex = 0;\n        return CAPTURING_REGEX_SOURCE.test(regexSource);\n    }\n    static replaceCaptures(regexSource, captureSource, captureIndices) {\n        return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n            let capture = captureIndices[parseInt(index || commandIndex, 10)];\n            if (capture) {\n                let result = captureSource.substring(capture.start, capture.end);\n                // Remove leading dots that would make the selector invalid\n                while (result[0] === '.') {\n                    result = result.substring(1);\n                }\n                switch (command) {\n                    case 'downcase':\n                        return result.toLowerCase();\n                    case 'upcase':\n                        return result.toUpperCase();\n                    default:\n                        return result;\n                }\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexports.RegexSource = RegexSource;\nfunction strcmp(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nexports.strcmp = strcmp;\nfunction strArrCmp(a, b) {\n    if (a === null && b === null) {\n        return 0;\n    }\n    if (!a) {\n        return -1;\n    }\n    if (!b) {\n        return 1;\n    }\n    let len1 = a.length;\n    let len2 = b.length;\n    if (len1 === len2) {\n        for (let i = 0; i < len1; i++) {\n            let res = strcmp(a[i], b[i]);\n            if (res !== 0) {\n                return res;\n            }\n        }\n        return 0;\n    }\n    return len1 - len2;\n}\nexports.strArrCmp = strArrCmp;\nfunction isValidHexColor(hex) {\n    if (/^#[0-9a-f]{6}$/i.test(hex)) {\n        // #rrggbb\n        return true;\n    }\n    if (/^#[0-9a-f]{8}$/i.test(hex)) {\n        // #rrggbbaa\n        return true;\n    }\n    if (/^#[0-9a-f]{3}$/i.test(hex)) {\n        // #rgb\n        return true;\n    }\n    if (/^#[0-9a-f]{4}$/i.test(hex)) {\n        // #rgba\n        return true;\n    }\n    return false;\n}\nexports.isValidHexColor = isValidHexColor;\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\nexports.escapeRegExpCharacters = escapeRegExpCharacters;\nclass CachedFn {\n    constructor(fn) {\n        this.fn = fn;\n        this.cache = new Map();\n    }\n    get(key) {\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        const value = this.fn(key);\n        this.cache.set(key, value);\n        return value;\n    }\n}\nexports.CachedFn = CachedFn;\nexports.performanceNow = typeof performance === \"undefined\"\n    // performance.now() is not available in this environment, so use Date.now()\n    ? function () {\n        return Date.now();\n    }\n    : function () {\n        return performance.now();\n    };\n//# sourceMappingURL=utils.js.map", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(787);\n", "!function(t,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define([],n):\"object\"==typeof exports?exports.onig=n():t.onig=n()}(this,(()=>{return t={770:function(t,n,e){\"use strict\";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(n,\"__esModule\",{value:!0}),n.setDefaultDebugCall=n.createOnigScanner=n.createOnigString=n.loadWASM=n.OnigScanner=n.OnigString=void 0;const i=r(e(418));let o=null,a=!1;class f{static _utf8ByteLength(t){let n=0;for(let e=0,r=t.length;e<r;e++){const i=t.charCodeAt(e);let o=i,a=!1;if(i>=55296&&i<=56319&&e+1<r){const n=t.charCodeAt(e+1);n>=56320&&n<=57343&&(o=65536+(i-55296<<10)|n-56320,a=!0)}n+=o<=127?1:o<=2047?2:o<=65535?3:4,a&&e++}return n}constructor(t){const n=t.length,e=f._utf8ByteLength(t),r=e!==n,i=r?new Uint32Array(n+1):null;r&&(i[n]=e);const o=r?new Uint32Array(e+1):null;r&&(o[e]=n);const a=new Uint8Array(e);let s=0;for(let e=0;e<n;e++){const f=t.charCodeAt(e);let u=f,c=!1;if(f>=55296&&f<=56319&&e+1<n){const n=t.charCodeAt(e+1);n>=56320&&n<=57343&&(u=65536+(f-55296<<10)|n-56320,c=!0)}r&&(i[e]=s,c&&(i[e+1]=s),u<=127?o[s+0]=e:u<=2047?(o[s+0]=e,o[s+1]=e):u<=65535?(o[s+0]=e,o[s+1]=e,o[s+2]=e):(o[s+0]=e,o[s+1]=e,o[s+2]=e,o[s+3]=e)),u<=127?a[s++]=u:u<=2047?(a[s++]=192|(1984&u)>>>6,a[s++]=128|(63&u)>>>0):u<=65535?(a[s++]=224|(61440&u)>>>12,a[s++]=128|(4032&u)>>>6,a[s++]=128|(63&u)>>>0):(a[s++]=240|(1835008&u)>>>18,a[s++]=128|(258048&u)>>>12,a[s++]=128|(4032&u)>>>6,a[s++]=128|(63&u)>>>0),c&&e++}this.utf16Length=n,this.utf8Length=e,this.utf16Value=t,this.utf8Value=a,this.utf16OffsetToUtf8=i,this.utf8OffsetToUtf16=o}createString(t){const n=t._omalloc(this.utf8Length);return t.HEAPU8.set(this.utf8Value,n),n}}class s{constructor(t){if(this.id=++s.LAST_ID,!o)throw new Error(\"Must invoke loadWASM first.\");this._onigBinding=o,this.content=t;const n=new f(t);this.utf16Length=n.utf16Length,this.utf8Length=n.utf8Length,this.utf16OffsetToUtf8=n.utf16OffsetToUtf8,this.utf8OffsetToUtf16=n.utf8OffsetToUtf16,this.utf8Length<1e4&&!s._sharedPtrInUse?(s._sharedPtr||(s._sharedPtr=o._omalloc(1e4)),s._sharedPtrInUse=!0,o.HEAPU8.set(n.utf8Value,s._sharedPtr),this.ptr=s._sharedPtr):this.ptr=n.createString(o)}convertUtf8OffsetToUtf16(t){return this.utf8OffsetToUtf16?t<0?0:t>this.utf8Length?this.utf16Length:this.utf8OffsetToUtf16[t]:t}convertUtf16OffsetToUtf8(t){return this.utf16OffsetToUtf8?t<0?0:t>this.utf16Length?this.utf8Length:this.utf16OffsetToUtf8[t]:t}dispose(){this.ptr===s._sharedPtr?s._sharedPtrInUse=!1:this._onigBinding._ofree(this.ptr)}}n.OnigString=s,s.LAST_ID=0,s._sharedPtr=0,s._sharedPtrInUse=!1;class u{constructor(t){if(!o)throw new Error(\"Must invoke loadWASM first.\");const n=[],e=[];for(let r=0,i=t.length;r<i;r++){const i=new f(t[r]);n[r]=i.createString(o),e[r]=i.utf8Length}const r=o._omalloc(4*t.length);o.HEAPU32.set(n,r/4);const i=o._omalloc(4*t.length);o.HEAPU32.set(e,i/4);const a=o._createOnigScanner(r,i,t.length);for(let e=0,r=t.length;e<r;e++)o._ofree(n[e]);o._ofree(i),o._ofree(r),0===a&&function(t){throw new Error(t.UTF8ToString(t._getLastOnigError()))}(o),this._onigBinding=o,this._ptr=a}dispose(){this._onigBinding._freeOnigScanner(this._ptr)}findNextMatchSync(t,n,e){let r=a,i=0;if(\"number\"==typeof e?(8&e&&(r=!0),i=e):\"boolean\"==typeof e&&(r=e),\"string\"==typeof t){t=new s(t);const e=this._findNextMatchSync(t,n,r,i);return t.dispose(),e}return this._findNextMatchSync(t,n,r,i)}_findNextMatchSync(t,n,e,r){const i=this._onigBinding;let o;if(o=e?i._findNextOnigScannerMatchDbg(this._ptr,t.id,t.ptr,t.utf8Length,t.convertUtf16OffsetToUtf8(n),r):i._findNextOnigScannerMatch(this._ptr,t.id,t.ptr,t.utf8Length,t.convertUtf16OffsetToUtf8(n),r),0===o)return null;const a=i.HEAPU32;let f=o/4;const s=a[f++],u=a[f++];let c=[];for(let n=0;n<u;n++){const e=t.convertUtf8OffsetToUtf16(a[f++]),r=t.convertUtf8OffsetToUtf16(a[f++]);c[n]={start:e,end:r,length:r-e}}return{index:s,captureIndices:c}}}n.OnigScanner=u;let c=!1,l=null;n.loadWASM=function(t){if(c)return l;let n,e,r,a;if(c=!0,function(t){return\"function\"==typeof t.instantiator}(t))n=t.instantiator,e=t.print;else{let r;!function(t){return void 0!==t.data}(t)?r=t:(r=t.data,e=t.print),n=function(t){return\"undefined\"!=typeof Response&&t instanceof Response}(r)?\"function\"==typeof WebAssembly.instantiateStreaming?function(t){return n=>WebAssembly.instantiateStreaming(t,n)}(r):function(t){return async n=>{const e=await t.arrayBuffer();return WebAssembly.instantiate(e,n)}}(r):function(t){return n=>WebAssembly.instantiate(t,n)}(r)}return l=new Promise(((t,n)=>{r=t,a=n})),function(t,n,e,r){(0,i.default)({print:n,instantiateWasm:(n,e)=>{if(\"undefined\"==typeof performance){const t=()=>Date.now();n.env.emscripten_get_now=t,n.wasi_snapshot_preview1.emscripten_get_now=t}return t(n).then((t=>e(t.instance)),r),{}}}).then((t=>{o=t,e()}))}(n,e,r,a),l},n.createOnigString=function(t){return new s(t)},n.createOnigScanner=function(t){return new u(t)},n.setDefaultDebugCall=function(t){a=t}},418:t=>{var n=(\"undefined\"!=typeof document&&document.currentScript&&document.currentScript.src,function(t){var n,e,r=void 0!==(t=t||{})?t:{};r.ready=new Promise((function(t,r){n=t,e=r}));var i,o=Object.assign({},r),a=[],f=!1,s=!1,u=!0,c=\"\";function l(t){return r.locateFile?r.locateFile(t,c):c+t}u&&(i=function(t){let n;return\"function\"==typeof readbuffer?new Uint8Array(readbuffer(t)):(n=read(t,\"binary\"),m(\"object\"==typeof n),n)},\"undefined\"!=typeof scriptArgs?a=scriptArgs:void 0!==arguments&&(a=arguments),\"undefined\"!=typeof onig_print&&(\"undefined\"==typeof console&&(console={}),console.log=onig_print,console.warn=console.error=\"undefined\"!=typeof printErr?printErr:onig_print));var h,p,d=r.print||console.log.bind(console),g=r.printErr||console.warn.bind(console);Object.assign(r,o),o=null,r.arguments&&(a=r.arguments),r.thisProgram&&r.thisProgram,r.quit&&r.quit,r.wasmBinary&&(h=r.wasmBinary),r.noExitRuntime,\"object\"!=typeof WebAssembly&&k(\"no native wasm support detected\");var _=!1;function m(t,n){t||k(n)}var y,w,S,v=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function A(t,n,e){for(var r=n+e,i=n;t[i]&&!(i>=r);)++i;if(i-n>16&&t.buffer&&v)return v.decode(t.subarray(n,i));for(var o=\"\";n<i;){var a=t[n++];if(128&a){var f=63&t[n++];if(192!=(224&a)){var s=63&t[n++];if((a=224==(240&a)?(15&a)<<12|f<<6|s:(7&a)<<18|f<<12|s<<6|63&t[n++])<65536)o+=String.fromCharCode(a);else{var u=a-65536;o+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else o+=String.fromCharCode((31&a)<<6|f)}else o+=String.fromCharCode(a)}return o}function b(t,n){return t?A(w,t,n):\"\"}function O(t){y=t,r.HEAP8=new Int8Array(t),r.HEAP16=new Int16Array(t),r.HEAP32=new Int32Array(t),r.HEAPU8=w=new Uint8Array(t),r.HEAPU16=new Uint16Array(t),r.HEAPU32=S=new Uint32Array(t),r.HEAPF32=new Float32Array(t),r.HEAPF64=new Float64Array(t)}r.INITIAL_MEMORY;var U=[],P=[],R=[];function x(){if(r.preRun)for(\"function\"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;)M(r.preRun.shift());G(U)}function T(){G(P)}function E(){if(r.postRun)for(\"function\"==typeof r.postRun&&(r.postRun=[r.postRun]);r.postRun.length;)I(r.postRun.shift());G(R)}function M(t){U.unshift(t)}function L(t){P.unshift(t)}function I(t){R.unshift(t)}var W=0,D=null,C=null;function N(t){W++,r.monitorRunDependencies&&r.monitorRunDependencies(W)}function j(t){if(W--,r.monitorRunDependencies&&r.monitorRunDependencies(W),0==W&&(null!==D&&(clearInterval(D),D=null),C)){var n=C;C=null,n()}}function k(t){r.onAbort&&r.onAbort(t),g(t=\"Aborted(\"+t+\")\"),_=!0,t+=\". Build with -sASSERTIONS for more info.\";var n=new WebAssembly.RuntimeError(t);throw e(n),n}var B,H,F=\"data:application/octet-stream;base64,\";function V(t){return t.startsWith(F)}function z(t){try{if(t==B&&h)return new Uint8Array(h);if(i)return i(t);throw\"both async and sync fetching of the wasm failed\"}catch(t){k(t)}}function q(){return h||!f&&!s||\"function\"!=typeof fetch?Promise.resolve().then((function(){return z(B)})):fetch(B,{credentials:\"same-origin\"}).then((function(t){if(!t.ok)throw\"failed to load wasm binary file at '\"+B+\"'\";return t.arrayBuffer()})).catch((function(){return z(B)}))}function Y(){var t={env:nt,wasi_snapshot_preview1:nt};function n(t,n){var e=t.exports;r.asm=e,O((p=r.asm.memory).buffer),r.asm.__indirect_function_table,L(r.asm.__wasm_call_ctors),j()}function i(t){n(t.instance)}function o(n){return q().then((function(n){return WebAssembly.instantiate(n,t)})).then((function(t){return t})).then(n,(function(t){g(\"failed to asynchronously prepare wasm: \"+t),k(t)}))}if(N(),r.instantiateWasm)try{return r.instantiateWasm(t,n)}catch(t){g(\"Module.instantiateWasm callback failed with error: \"+t),e(t)}return(h||\"function\"!=typeof WebAssembly.instantiateStreaming||V(B)||\"function\"!=typeof fetch?o(i):fetch(B,{credentials:\"same-origin\"}).then((function(n){return WebAssembly.instantiateStreaming(n,t).then(i,(function(t){return g(\"wasm streaming compile failed: \"+t),g(\"falling back to ArrayBuffer instantiation\"),o(i)}))}))).catch(e),{}}function G(t){for(;t.length>0;)t.shift()(r)}function J(t,n,e){w.copyWithin(t,n,n+e)}function K(t){try{return p.grow(t-y.byteLength+65535>>>16),O(p.buffer),1}catch(t){}}function Q(t){var n,e=w.length,r=2147483648;if((t>>>=0)>r)return!1;for(var i=1;i<=4;i*=2){var o=e*(1+.2/i);if(o=Math.min(o,t+100663296),K(Math.min(r,(n=Math.max(t,o))+(65536-n%65536)%65536)))return!0}return!1}V(B=\"onig.wasm\")||(B=l(B)),H=\"undefined\"!=typeof dateNow?dateNow:()=>performance.now();var X=[null,[],[]];function Z(t,n){var e=X[t];0===n||10===n?((1===t?d:g)(A(e,0)),e.length=0):e.push(n)}function $(t,n,e,r){for(var i=0,o=0;o<e;o++){var a=S[n>>2],f=S[n+4>>2];n+=8;for(var s=0;s<f;s++)Z(t,w[a+s]);i+=f}return S[r>>2]=i,0}var tt,nt={emscripten_get_now:H,emscripten_memcpy_big:J,emscripten_resize_heap:Q,fd_write:$};function et(t){function e(){tt||(tt=!0,r.calledRun=!0,_||(T(),n(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),E()))}t=t||a,W>0||(x(),W>0||(r.setStatus?(r.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){r.setStatus(\"\")}),1),e()}),1)):e()))}if(Y(),r.___wasm_call_ctors=function(){return(r.___wasm_call_ctors=r.asm.__wasm_call_ctors).apply(null,arguments)},r.___errno_location=function(){return(r.___errno_location=r.asm.__errno_location).apply(null,arguments)},r._omalloc=function(){return(r._omalloc=r.asm.omalloc).apply(null,arguments)},r._ofree=function(){return(r._ofree=r.asm.ofree).apply(null,arguments)},r._getLastOnigError=function(){return(r._getLastOnigError=r.asm.getLastOnigError).apply(null,arguments)},r._createOnigScanner=function(){return(r._createOnigScanner=r.asm.createOnigScanner).apply(null,arguments)},r._freeOnigScanner=function(){return(r._freeOnigScanner=r.asm.freeOnigScanner).apply(null,arguments)},r._findNextOnigScannerMatch=function(){return(r._findNextOnigScannerMatch=r.asm.findNextOnigScannerMatch).apply(null,arguments)},r._findNextOnigScannerMatchDbg=function(){return(r._findNextOnigScannerMatchDbg=r.asm.findNextOnigScannerMatchDbg).apply(null,arguments)},r.stackSave=function(){return(r.stackSave=r.asm.stackSave).apply(null,arguments)},r.stackRestore=function(){return(r.stackRestore=r.asm.stackRestore).apply(null,arguments)},r.stackAlloc=function(){return(r.stackAlloc=r.asm.stackAlloc).apply(null,arguments)},r.dynCall_jiji=function(){return(r.dynCall_jiji=r.asm.dynCall_jiji).apply(null,arguments)},r.UTF8ToString=b,C=function t(){tt||et(),tt||(C=t)},r.preInit)for(\"function\"==typeof r.preInit&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();return et(),t.ready});t.exports=n}},n={},function e(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={exports:{}};return t[r].call(o.exports,o,o.exports,e),o.exports}(770);var t,n}));", "import vsctm from 'vscode-textmate';\nimport oniguruma from 'vscode-oniguruma';\n// @ts-ignore\nimport wasmBin from 'vscode-oniguruma/release/onig.wasm';\n\nconst generateCode = ($element: Element) => {\n    const $pre = document.createElement('pre')\n    const $code = document.createElement('code')\n    $pre.appendChild($code)\n    $element.appendChild($pre)\n\n    return $code\n}\n\nconst vscodeOnigurumaLib = oniguruma.loadWASM(wasmBin).then(() => {\n    return {\n        createOnigScanner(patterns) { return new oniguruma.OnigScanner(patterns); },\n        createOnigString(s) { return new oniguruma.OnigString(s); }\n    };\n});\n\n// Create a registry that can create a grammar from a scope name.\nconst registry = new vsctm.Registry({\n    onigLib: vscodeOnigurumaLib,\n    loadGrammar: (scopeName) => {\n        console.log(scopeName);\n        \n        if (scopeName === 'source.js') {\n            return fetch('https://raw.githubusercontent.com/textmate/javascript.tmbundle/master/Syntaxes/JavaScript.plist')\n              .then(response => response.text())\n              .then(content => vsctm.parseRawGrammar(content));\n        }\n        console.log(`Unknown scope name: ${scopeName}`);\n        return Promise.resolve(null);\n    }\n});\n\n// Load the JavaScript grammar and any other grammars included by it async.\nconst execute = ($element: Element) => {\n    registry.loadGrammar('source.js').then(grammar => {\n        console.log(grammar);\n        \n        if (!grammar) return\n        const text = [\n            `// There is a comment`,\n            `function sayHello(name) {`,\n            `\\treturn \"Hello, \" + name;`,\n            `}`\n        ];\n        let ruleStack = vsctm.INITIAL;\n        const $code = generateCode($element)\n        for (let i = 0; i < text.length; i++) {\n            const line = text[i];\n            const lineTokens = grammar.tokenizeLine(line, ruleStack);\n            console.log(`\\nTokenizing line: ${line}`);\n            const $line = document.createElement('div')\n            $line.classList.add('line')\n            for (let j = 0; j < lineTokens.tokens.length; j++) {\n                const token = lineTokens.tokens[j];\n                console.log(` - token from ${token.startIndex} to ${token.endIndex} ` +\n                  `(${line.substring(token.startIndex, token.endIndex)}) ` +\n                  `with scopes ${token.scopes.join(', ')}`\n                );\n                const $token = document.createElement('span')\n                $token.classList.add('token')\n                $token.innerHTML = line.substring(token.startIndex, token.endIndex)\n                $line.appendChild($token)\n            }\n            ruleStack = lineTokens.ruleStack;\n            $code.appendChild($line)\n        }\n    });\n}\nexport default execute\n\n/* OUTPUT:\n\nUnknown scope name: source.js.regexp\n\nTokenizing line: function sayHello(name) {\n - token from 0 to 8 (function) with scopes source.js, meta.function.js, storage.type.function.js\n - token from 8 to 9 ( ) with scopes source.js, meta.function.js\n - token from 9 to 17 (sayHello) with scopes source.js, meta.function.js, entity.name.function.js\n - token from 17 to 18 (() with scopes source.js, meta.function.js, punctuation.definition.parameters.begin.js\n - token from 18 to 22 (name) with scopes source.js, meta.function.js, variable.parameter.function.js\n - token from 22 to 23 ()) with scopes source.js, meta.function.js, punctuation.definition.parameters.end.js\n - token from 23 to 24 ( ) with scopes source.js\n - token from 24 to 25 ({) with scopes source.js, punctuation.section.scope.begin.js\n\nTokenizing line:        return \"Hello, \" + name;\n - token from 0 to 1 (  ) with scopes source.js\n - token from 1 to 7 (return) with scopes source.js, keyword.control.js\n - token from 7 to 8 ( ) with scopes source.js\n - token from 8 to 9 (\") with scopes source.js, string.quoted.double.js, punctuation.definition.string.begin.js\n - token from 9 to 16 (Hello, ) with scopes source.js, string.quoted.double.js\n - token from 16 to 17 (\") with scopes source.js, string.quoted.double.js, punctuation.definition.string.end.js\n - token from 17 to 18 ( ) with scopes source.js\n - token from 18 to 19 (+) with scopes source.js, keyword.operator.arithmetic.js\n - token from 19 to 20 ( ) with scopes source.js\n - token from 20 to 24 (name) with scopes source.js, support.constant.dom.js\n - token from 24 to 25 (;) with scopes source.js, punctuation.terminator.statement.js\n\nTokenizing line: }\n - token from 0 to 1 (}) with scopes source.js, punctuation.section.scope.end.js\n\n*/\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "this", "e", "t", "Object", "defineProperty", "value", "UseOnigurumaFindOptions", "DebugFlags", "InDebugMode", "process", "env", "EncodedTokenAttributes", "toOptionalTokenType", "toBinaryStr", "encodedTokenAttributes", "r", "toString", "length", "print", "languageId", "getLanguageId", "tokenType", "getTokenType", "fontStyle", "getFontStyle", "foreground", "getForeground", "background", "getBackground", "console", "log", "containsBalancedBrackets", "set", "_languageId", "_tokenType", "_containsBalancedBracketsBit", "_fontStyle", "_foreground", "_background", "standardType", "BasicScopeAttributesProvider", "BasicScopeAttributes", "utils_1", "constructor", "initialLanguageId", "embeddedLanguages", "_getBasicScopeAttributes", "CachedFn", "scopeName", "_scopeToLanguage", "standardTokenType", "_toStandardTokenType", "_defaultAttributes", "_embeddedLanguagesMatcher", "ScopeMatcher", "entries", "getDefaultAttributes", "getBasicScopeAttributes", "_NULL_SCOPE_METADATA", "get", "scope", "match", "m", "STANDARD_TOKEN_TYPE_REGEXP", "Error", "values", "scopesRegExp", "Map", "escapedScopes", "map", "escapeRegExpCharacters", "sort", "reverse", "RegExp", "join", "LineTokens", "BalancedBracketSelectors", "StateStack", "AttributedScopeStack", "Grammar", "createGrammar", "debug_1", "encodedTokenAttributes_1", "matcher_1", "onigLib_1", "rule_1", "theme_1", "basicScopesAttributeProvider_1", "tokenizeString_1", "collectInjections", "result", "selector", "rule", "ruleFactoryHelper", "grammar", "matchers", "createMatchers", "nameMatcher", "ruleId", "RuleFactory", "getCompiledRuleId", "repository", "matcher", "push", "debugSelector", "priority", "identifers", "scopes", "lastIndex", "every", "identifier", "i", "scopesAreMatching", "thisScopeName", "len", "substr", "initialLanguage", "tokenTypes", "balancedBracketSelectors", "grammarRepository", "onigLib", "_rootScopeName", "_onigLib", "_basicScopeAttributesProvider", "_rootId", "_lastRuleId", "_ruleId2desc", "_includedGrammars", "_grammarRepository", "_grammar", "initGrammar", "_injections", "_tokenTypeMatchers", "keys", "type", "themeProvider", "dispose", "createOnigScanner", "sources", "createOnigString", "getMetadataForScope", "_collectInjections", "getExternalGrammar", "rawInjections", "injections", "expression", "injectionScopeNames", "forEach", "injectionScopeName", "injectionGrammar", "injectionSelector", "i1", "i2", "getInjections", "injection", "registerRule", "id", "ruleIdFromNumber", "getRule", "ruleIdToNumber", "rawIncludedGrammar", "lookup", "$base", "tokenizeLine", "lineText", "prevState", "timeLimit", "_tokenize", "tokens", "lineTokens", "getResult", "ruleStack", "lineLength", "stoppedEarly", "tokenizeLine2", "getBinaryResult", "emitBinaryTokens", "isFirstLine", "$self", "NULL", "reset", "rawDefaultMetadata", "defaultStyle", "getDefaults", "defaultMetadata", "foregroundId", "backgroundId", "rootScopeName", "getName", "scopeList", "createRootAndLookUpScopeName", "createRoot", "onigLineText", "content", "_tokenizeString", "disposeOnigString", "stack", "base", "clone", "$vscodeTextmateLocation", "patterns", "name", "parent", "scopePath", "tokenAttributes", "static", "ScopeStack", "rawRootMetadata", "rootStyle", "themeMatch", "resolvedTokenAttributes", "mergeAttributes", "equals", "other", "_equals", "a", "b", "existingTokenAttributes", "basicScopeAttributes", "styleAttributes", "pushAttributed", "indexOf", "_pushAttributed", "split", "target", "rawMetadata", "newPath", "scopeThemeMatchResult", "metadata", "getScopeNames", "getSegments", "enterPos", "anchorPos", "beginRuleCapturedEOL", "endRule", "nameScopesList", "contentNameScopesList", "_stackElementBrand", "depth", "_enterPos", "_anchorPos", "_structuralEquals", "el", "_reset", "pop", "safePop", "getEnterPos", "getAnchorPos", "_writeString", "res", "outIndex", "withContentNameScopesList", "contentNameScopeStack", "withEndRule", "hasSameRuleAs", "balancedBracketScopes", "unbalancedBracketScopes", "allowAny", "flatMap", "matchesAlways", "matchesNever", "excluder", "includer", "tokenTypeOverrides", "_emitBinaryTokens", "_tokenTypeOverrides", "_lineText", "_tokens", "_binaryTokens", "_lastTokenEndIndex", "produce", "endIndex", "produceFromScopes", "scopesList", "substring", "replace", "k", "startIndex", "Uint32Array", "parseInclude", "TopLevelRepositoryReference", "TopLevelReference", "RelativeReference", "SelfReference", "BaseReference", "ScopeDependencyProcessor", "ExternalReferenceCollector", "TopLevelRepositoryRuleReference", "TopLevelRuleReference", "toKey", "ruleName", "_references", "_seenReferenceKeys", "Set", "visitedRule", "references", "add", "reference", "key", "has", "collectReferencesOfReference", "baseGrammarScopeName", "repo", "selfGrammar", "baseGrammar", "collectExternalReferencesInTopLevelRule", "collectExternalReferencesInTopLevelRepositoryRule", "context", "collectExternalReferencesInRules", "Array", "isArray", "rules", "patternRepository", "mergeObjects", "include", "kind", "newContext", "initialScopeName", "seenFullScopeRequests", "seenPartialScopeRequests", "Q", "processQueue", "q", "deps", "dep", "indexOfSharp", "__createBinding", "create", "o", "k2", "enumerable", "__exportStar", "p", "prototype", "hasOwnProperty", "call", "LocalStackElement", "TokenizeStringResult", "linePos", "checkWhileConditions", "STOP", "anchorPosition", "whileCheckResult", "whileRules", "node", "nodeRule", "BeginWhileRule", "whileRule", "ruleScanner", "findOptions", "prepareRuleWhileSearch", "findNextMatchSync", "debugName", "debugWhileRegExp", "whileRuleId", "captureIndices", "start", "handleCaptures", "whileCaptures", "end", "startTime", "Date", "now", "scanNext", "matchResult", "prepareRuleSearch", "perfStart", "performanceNow", "elapsedMillis", "warn", "matchedRuleId", "injectionResult", "bestMatchRuleId", "bestMatchRating", "Number", "MAX_VALUE", "bestMatchCaptureIndices", "bestMatchResultPriority", "matchRating", "priorityMatch", "matchResultScore", "injectionResultScore", "hasAdvanced", "endRuleId", "poppedRule", "debugEndRegExp", "endCaptures", "popped", "error", "_rule", "beforePush", "BeginEndRule", "pushedRule", "debugBeginRegExp", "beginCaptures", "contentName", "getContentName", "endHasBackReferences", "getEndWithResolvedBackReferences", "whileHasBackReferences", "getWhileWithResolvedBackReferences", "matchingRule", "debugMatchRegExp", "captures", "endRegexSource", "allowA", "allowG", "compile", "getFindOptions", "compileAG", "compileWhile", "compileWhileAG", "options", "lineTextContent", "Math", "min", "localStack", "maxEnd", "captureRule", "captureIndex", "endPos", "retokenizeCapturedWithRuleId", "stackClone", "onigSubStr", "captureRuleScopeName", "captureRuleScopesList", "doFail", "streamState", "msg", "pos", "source", "parseJSON", "filename", "withMetadata", "JSONStreamState", "token", "JSONToken", "state", "cur", "stateStack", "objStack", "pushState", "popState", "fail", "nextJSONToken", "toLocation", "keyValue", "parseFloat", "newArr", "newDict", "line", "char", "offset", "_state", "_out", "chCode", "charCodeAt", "_", "m0", "String", "fromCodePoint", "parseInt", "parseRawGrammar", "INITIAL", "Registry", "grammar_1", "grammarReader", "registry_1", "grammarDependencies_1", "_options", "_syncRegistry", "SyncRegistry", "Theme", "createFromRawTheme", "theme", "colorMap", "_ensureGrammarCache", "setTheme", "getColorMap", "loadGrammarWithEmbeddedLanguages", "loadGrammarWithConfiguration", "configuration", "_loadGrammar", "unbalancedBracketSelectors", "loadGrammar", "async", "dependencyProcessor", "Promise", "all", "request", "_loadSingleGrammar", "_grammarForScopeName", "_doLoadSingleGrammar", "addGrammar", "rawGrammar", "grammarForScopeName", "isIdentifier", "matchesName", "results", "tokenizer", "input", "regex", "exec", "next", "charAt", "parseConjunction", "parseOperand", "expressionToNegate", "matcherInput", "expressionInParents", "some", "parseInnerExpression", "identifiers", "str", "plist", "json_1", "filePath", "test", "contents", "JSON", "parse", "parseWithLocation", "parsePLIST", "_parse", "locationKeyName", "advancePosBy", "by", "advancePosTo", "to", "skipWhitespace", "advanceIfStartsWith", "advanceUntil", "nextOccurence", "captureUntil", "curKey", "newState", "newCur", "dictState", "arrState", "leaveDict", "leaveArray", "acceptString", "val", "acceptReal", "isNaN", "acceptInteger", "acceptDate", "acceptData", "acceptBool", "parseOpenTag", "isClosed", "trim", "parseTagValue", "tag", "peekChCode", "_onigLibPromise", "_grammars", "_rawGrammars", "_injectionGrammars", "_theme", "targetScope", "CompiledRule", "RegExpSourceList", "RegExpSource", "IncludeOnlyRule", "MatchRule", "CaptureRule", "Rule", "HAS_BACK_REFERENCES", "BACK_REFERENCING_END", "Symbol", "$location", "_name", "_nameIsCapturing", "RegexSource", "hasCaptures", "_contentName", "_contentNameIsCapturing", "location", "basename", "replaceCaptures", "super", "collectPatterns", "out", "_match", "_cachedCompiledPatterns", "_getCachedCompiledPatterns", "hasMissingPatterns", "pattern", "begin", "applyEndPatternLast", "_begin", "_end", "hasBackReferences", "resolveBackReferences", "unshift", "setSource", "_while", "_cachedCompiledWhilePatterns", "_getCachedCompiledWhilePatterns", "helper", "desc", "_compileCaptures", "_compilePatterns", "while", "maximumCaptureId", "captureId", "numericCaptureId", "createCaptureRule", "localIncludedRule", "externalGrammarName", "externalGrammarInclude", "externalGrammar", "externalIncludedRule", "skipRule", "regExpSource", "lastPushedPos", "output", "hasAnchor", "nextCh", "_anchorCache", "_buildAnchorCache", "newSource", "capturedValues", "capture", "g1", "ch", "A0_G0_result", "A0_G1_result", "A1_G0_result", "A1_G1_result", "A0_G0", "A0_G1", "A1_G0", "A1_G1", "resolveAnchors", "_items", "_hasAnchors", "_cached", "_disposeCaches", "item", "index", "regExps", "_resolveAnchors", "scanner", "string", "startPosition", "ThemeTrieElement", "ThemeTrieElementRule", "ColorMap", "fontStyleToString", "ParsedThemeRule", "parseTheme", "StyleAttributes", "_colorMap", "_defaults", "_root", "_cachedMatchRoot", "createFromParsedTheme", "parsedThemeRules", "strcmp", "strArrCmp", "parentScopes", "defaultFontStyle", "defaultForeground", "defaultBackground", "incomingDefaults", "shift", "defaults", "getId", "insert", "effectiveRule", "find", "v", "scopePattern", "_matchesScope", "segments", "startsWith", "settings", "resultLen", "entry", "_scope", "j", "lenJ", "isValidHexColor", "slice", "style", "_lastColorId", "_id2color", "_color2id", "_isFrozen", "color", "toUpperCase", "scopeDepth", "arr", "acceptOverwrite", "_mainRule", "rulesWithParentScopes", "_children", "_rulesWithParentScopes", "_cmpBySpecificity", "aParentScopes", "bParentScopes", "aParentScopesLen", "bParentScopesLen", "aLen", "bLen", "_sortBySpecificity", "concat", "head", "tail", "dotIndex", "_doInsertHere", "child", "cloneArr", "doClone", "something", "obj", "path", "idx", "lastIndexOf", "CAPTURING_REGEX_SOURCE", "regexSource", "captureSource", "commandIndex", "command", "toLowerCase", "len1", "len2", "hex", "fn", "cache", "performance", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "require_main", "t", "n", "e", "r", "i", "o", "a", "s", "f", "u", "c", "oniguruma", "vsctm"]
}
